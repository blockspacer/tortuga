// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tortuga/tortuga.proto

#include "tortuga/tortuga.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace tortuga {
class WorkerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Worker>
      _instance;
} _Worker_default_instance_;
class HeartbeatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Heartbeat>
      _instance;
} _Heartbeat_default_instance_;
class TaskReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TaskReq>
      _instance;
} _TaskReq_default_instance_;
class TaskRespDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TaskResp>
      _instance;
} _TaskResp_default_instance_;
class TaskDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Task>
      _instance;
} _Task_default_instance_;
class CreateReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateReq>
      _instance;
} _CreateReq_default_instance_;
class CreateRespDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateResp>
      _instance;
} _CreateResp_default_instance_;
class CompleteTaskReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CompleteTaskReq>
      _instance;
} _CompleteTaskReq_default_instance_;
}  // namespace tortuga
namespace protobuf_tortuga_2ftortuga_2eproto {
void InitDefaultsWorkerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::tortuga::_Worker_default_instance_;
    new (ptr) ::tortuga::Worker();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tortuga::Worker::InitAsDefaultInstance();
}

void InitDefaultsWorker() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWorkerImpl);
}

void InitDefaultsHeartbeatImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_tortuga_2ftortuga_2eproto::InitDefaultsWorker();
  {
    void* ptr = &::tortuga::_Heartbeat_default_instance_;
    new (ptr) ::tortuga::Heartbeat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tortuga::Heartbeat::InitAsDefaultInstance();
}

void InitDefaultsHeartbeat() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHeartbeatImpl);
}

void InitDefaultsTaskReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_tortuga_2ftortuga_2eproto::InitDefaultsWorker();
  {
    void* ptr = &::tortuga::_TaskReq_default_instance_;
    new (ptr) ::tortuga::TaskReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tortuga::TaskReq::InitAsDefaultInstance();
}

void InitDefaultsTaskReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTaskReqImpl);
}

void InitDefaultsTaskRespImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::tortuga::_TaskResp_default_instance_;
    new (ptr) ::tortuga::TaskResp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tortuga::TaskResp::InitAsDefaultInstance();
}

void InitDefaultsTaskResp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTaskRespImpl);
}

void InitDefaultsTaskImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  protobuf_google_2fprotobuf_2fwrappers_2eproto::InitDefaultsInt32Value();
  {
    void* ptr = &::tortuga::_Task_default_instance_;
    new (ptr) ::tortuga::Task();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tortuga::Task::InitAsDefaultInstance();
}

void InitDefaultsTask() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTaskImpl);
}

void InitDefaultsCreateReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_tortuga_2ftortuga_2eproto::InitDefaultsTask();
  {
    void* ptr = &::tortuga::_CreateReq_default_instance_;
    new (ptr) ::tortuga::CreateReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tortuga::CreateReq::InitAsDefaultInstance();
}

void InitDefaultsCreateReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateReqImpl);
}

void InitDefaultsCreateRespImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::tortuga::_CreateResp_default_instance_;
    new (ptr) ::tortuga::CreateResp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tortuga::CreateResp::InitAsDefaultInstance();
}

void InitDefaultsCreateResp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateRespImpl);
}

void InitDefaultsCompleteTaskReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_tortuga_2ftortuga_2eproto::InitDefaultsWorker();
  {
    void* ptr = &::tortuga::_CompleteTaskReq_default_instance_;
    new (ptr) ::tortuga::CompleteTaskReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tortuga::CompleteTaskReq::InitAsDefaultInstance();
}

void InitDefaultsCompleteTaskReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCompleteTaskReqImpl);
}

::google::protobuf::Metadata file_level_metadata[8];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::Worker, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::Worker, worker_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::Worker, uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::Worker, capabilities_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::Heartbeat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::Heartbeat, worker_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskReq, worker_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskResp, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskResp, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskResp, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskResp, handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskResp, none_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::Task, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::Task, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::Task, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::Task, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::Task, priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::Task, max_retries_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::CreateReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::CreateReq, task_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::CreateResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::CreateResp, handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::CreateResp, created_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::CompleteTaskReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::CompleteTaskReq, worker_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::CompleteTaskReq, handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::CompleteTaskReq, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::CompleteTaskReq, error_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::CompleteTaskReq, logs_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tortuga::Worker)},
  { 8, -1, sizeof(::tortuga::Heartbeat)},
  { 14, -1, sizeof(::tortuga::TaskReq)},
  { 20, -1, sizeof(::tortuga::TaskResp)},
  { 30, -1, sizeof(::tortuga::Task)},
  { 40, -1, sizeof(::tortuga::CreateReq)},
  { 46, -1, sizeof(::tortuga::CreateResp)},
  { 53, -1, sizeof(::tortuga::CompleteTaskReq)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tortuga::_Worker_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tortuga::_Heartbeat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tortuga::_TaskReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tortuga::_TaskResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tortuga::_Task_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tortuga::_CreateReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tortuga::_CreateResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tortuga::_CompleteTaskReq_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "tortuga/tortuga.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025tortuga/tortuga.proto\022\007tortuga\032\031google"
      "/protobuf/any.proto\032\033google/protobuf/emp"
      "ty.proto\032\036google/protobuf/wrappers.proto"
      "\"\?\n\006Worker\022\021\n\tworker_id\030\001 \001(\t\022\014\n\004uuid\030\002 "
      "\001(\t\022\024\n\014capabilities\030\003 \003(\t\",\n\tHeartbeat\022\037"
      "\n\006worker\030\001 \001(\0132\017.tortuga.Worker\"*\n\007TaskR"
      "eq\022\037\n\006worker\030\001 \001(\0132\017.tortuga.Worker\"f\n\010T"
      "askResp\022\n\n\002id\030\001 \001(\t\022\014\n\004type\030\002 \001(\t\022\"\n\004dat"
      "a\030\003 \001(\0132\024.google.protobuf.Any\022\016\n\006handle\030"
      "\004 \001(\t\022\014\n\004none\030\005 \001(\010\"\245\001\n\004Task\022\n\n\002id\030\001 \001(\t"
      "\022\014\n\004type\030\002 \001(\t\022\"\n\004data\030\003 \001(\0132\024.google.pr"
      "otobuf.Any\022-\n\010priority\030\004 \001(\0132\033.google.pr"
      "otobuf.Int32Value\0220\n\013max_retries\030\005 \001(\0132\033"
      ".google.protobuf.Int32Value\"(\n\tCreateReq"
      "\022\033\n\004task\030\001 \001(\0132\r.tortuga.Task\"-\n\nCreateR"
      "esp\022\016\n\006handle\030\001 \001(\t\022\017\n\007created\030\002 \001(\010\"u\n\017"
      "CompleteTaskReq\022\037\n\006worker\030\001 \001(\0132\017.tortug"
      "a.Worker\022\016\n\006handle\030\002 \001(\t\022\014\n\004code\030\003 \001(\005\022\025"
      "\n\rerror_message\030\004 \001(\t\022\014\n\004logs\030\005 \001(\t2\250\003\n\007"
      "Tortuga\0225\n\nCreateTask\022\022.tortuga.CreateRe"
      "q\032\023.tortuga.CreateResp\0222\n\013RequestTask\022\020."
      "tortuga.TaskReq\032\021.tortuga.TaskResp\0224\n\tHe"
      "artbeat\022\017.tortuga.Worker\032\026.google.protob"
      "uf.Empty\022@\n\014CompleteTask\022\030.tortuga.Compl"
      "eteTaskReq\032\026.google.protobuf.Empty\022B\n\006Is"
      "Done\022\034.google.protobuf.StringValue\032\032.goo"
      "gle.protobuf.BoolValue\0226\n\004Ping\022\026.google."
      "protobuf.Empty\032\026.google.protobuf.Empty\022>"
      "\n\014QuitQuitQuit\022\026.google.protobuf.Empty\032\026"
      ".google.protobuf.EmptyB\032\n\nio.tortugaB\014To"
      "rtugaProtob\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1218);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tortuga/tortuga.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fwrappers_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tortuga_2ftortuga_2eproto
namespace tortuga {

// ===================================================================

void Worker::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Worker::kWorkerIdFieldNumber;
const int Worker::kUuidFieldNumber;
const int Worker::kCapabilitiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Worker::Worker()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsWorker();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tortuga.Worker)
}
Worker::Worker(const Worker& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      capabilities_(from.capabilities_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  worker_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.worker_id().size() > 0) {
    worker_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worker_id_);
  }
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  // @@protoc_insertion_point(copy_constructor:tortuga.Worker)
}

void Worker::SharedCtor() {
  worker_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Worker::~Worker() {
  // @@protoc_insertion_point(destructor:tortuga.Worker)
  SharedDtor();
}

void Worker::SharedDtor() {
  worker_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Worker::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Worker::descriptor() {
  ::protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Worker& Worker::default_instance() {
  ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsWorker();
  return *internal_default_instance();
}

Worker* Worker::New(::google::protobuf::Arena* arena) const {
  Worker* n = new Worker;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Worker::Clear() {
// @@protoc_insertion_point(message_clear_start:tortuga.Worker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  capabilities_.Clear();
  worker_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Worker::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tortuga.Worker)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string worker_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_worker_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->worker_id().data(), static_cast<int>(this->worker_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.Worker.worker_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uuid().data(), static_cast<int>(this->uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.Worker.uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string capabilities = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_capabilities()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->capabilities(this->capabilities_size() - 1).data(),
            static_cast<int>(this->capabilities(this->capabilities_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.Worker.capabilities"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tortuga.Worker)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tortuga.Worker)
  return false;
#undef DO_
}

void Worker::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tortuga.Worker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string worker_id = 1;
  if (this->worker_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->worker_id().data(), static_cast<int>(this->worker_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.Worker.worker_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->worker_id(), output);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.Worker.uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uuid(), output);
  }

  // repeated string capabilities = 3;
  for (int i = 0, n = this->capabilities_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->capabilities(i).data(), static_cast<int>(this->capabilities(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.Worker.capabilities");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->capabilities(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tortuga.Worker)
}

::google::protobuf::uint8* Worker::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tortuga.Worker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string worker_id = 1;
  if (this->worker_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->worker_id().data(), static_cast<int>(this->worker_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.Worker.worker_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->worker_id(), target);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.Worker.uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uuid(), target);
  }

  // repeated string capabilities = 3;
  for (int i = 0, n = this->capabilities_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->capabilities(i).data(), static_cast<int>(this->capabilities(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.Worker.capabilities");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->capabilities(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tortuga.Worker)
  return target;
}

size_t Worker::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tortuga.Worker)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string capabilities = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->capabilities_size());
  for (int i = 0, n = this->capabilities_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->capabilities(i));
  }

  // string worker_id = 1;
  if (this->worker_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->worker_id());
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Worker::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tortuga.Worker)
  GOOGLE_DCHECK_NE(&from, this);
  const Worker* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Worker>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tortuga.Worker)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tortuga.Worker)
    MergeFrom(*source);
  }
}

void Worker::MergeFrom(const Worker& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tortuga.Worker)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  capabilities_.MergeFrom(from.capabilities_);
  if (from.worker_id().size() > 0) {

    worker_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worker_id_);
  }
  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
}

void Worker::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tortuga.Worker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Worker::CopyFrom(const Worker& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tortuga.Worker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Worker::IsInitialized() const {
  return true;
}

void Worker::Swap(Worker* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Worker::InternalSwap(Worker* other) {
  using std::swap;
  capabilities_.InternalSwap(&other->capabilities_);
  worker_id_.Swap(&other->worker_id_);
  uuid_.Swap(&other->uuid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Worker::GetMetadata() const {
  protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Heartbeat::InitAsDefaultInstance() {
  ::tortuga::_Heartbeat_default_instance_._instance.get_mutable()->worker_ = const_cast< ::tortuga::Worker*>(
      ::tortuga::Worker::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Heartbeat::kWorkerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Heartbeat::Heartbeat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsHeartbeat();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tortuga.Heartbeat)
}
Heartbeat::Heartbeat(const Heartbeat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_worker()) {
    worker_ = new ::tortuga::Worker(*from.worker_);
  } else {
    worker_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tortuga.Heartbeat)
}

void Heartbeat::SharedCtor() {
  worker_ = NULL;
  _cached_size_ = 0;
}

Heartbeat::~Heartbeat() {
  // @@protoc_insertion_point(destructor:tortuga.Heartbeat)
  SharedDtor();
}

void Heartbeat::SharedDtor() {
  if (this != internal_default_instance()) delete worker_;
}

void Heartbeat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Heartbeat::descriptor() {
  ::protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Heartbeat& Heartbeat::default_instance() {
  ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsHeartbeat();
  return *internal_default_instance();
}

Heartbeat* Heartbeat::New(::google::protobuf::Arena* arena) const {
  Heartbeat* n = new Heartbeat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Heartbeat::Clear() {
// @@protoc_insertion_point(message_clear_start:tortuga.Heartbeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && worker_ != NULL) {
    delete worker_;
  }
  worker_ = NULL;
  _internal_metadata_.Clear();
}

bool Heartbeat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tortuga.Heartbeat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tortuga.Worker worker = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_worker()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tortuga.Heartbeat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tortuga.Heartbeat)
  return false;
#undef DO_
}

void Heartbeat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tortuga.Heartbeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tortuga.Worker worker = 1;
  if (this->has_worker()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->worker_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tortuga.Heartbeat)
}

::google::protobuf::uint8* Heartbeat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tortuga.Heartbeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tortuga.Worker worker = 1;
  if (this->has_worker()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->worker_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tortuga.Heartbeat)
  return target;
}

size_t Heartbeat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tortuga.Heartbeat)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tortuga.Worker worker = 1;
  if (this->has_worker()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->worker_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Heartbeat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tortuga.Heartbeat)
  GOOGLE_DCHECK_NE(&from, this);
  const Heartbeat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Heartbeat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tortuga.Heartbeat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tortuga.Heartbeat)
    MergeFrom(*source);
  }
}

void Heartbeat::MergeFrom(const Heartbeat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tortuga.Heartbeat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_worker()) {
    mutable_worker()->::tortuga::Worker::MergeFrom(from.worker());
  }
}

void Heartbeat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tortuga.Heartbeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Heartbeat::CopyFrom(const Heartbeat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tortuga.Heartbeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Heartbeat::IsInitialized() const {
  return true;
}

void Heartbeat::Swap(Heartbeat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Heartbeat::InternalSwap(Heartbeat* other) {
  using std::swap;
  swap(worker_, other->worker_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Heartbeat::GetMetadata() const {
  protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TaskReq::InitAsDefaultInstance() {
  ::tortuga::_TaskReq_default_instance_._instance.get_mutable()->worker_ = const_cast< ::tortuga::Worker*>(
      ::tortuga::Worker::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskReq::kWorkerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskReq::TaskReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsTaskReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tortuga.TaskReq)
}
TaskReq::TaskReq(const TaskReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_worker()) {
    worker_ = new ::tortuga::Worker(*from.worker_);
  } else {
    worker_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tortuga.TaskReq)
}

void TaskReq::SharedCtor() {
  worker_ = NULL;
  _cached_size_ = 0;
}

TaskReq::~TaskReq() {
  // @@protoc_insertion_point(destructor:tortuga.TaskReq)
  SharedDtor();
}

void TaskReq::SharedDtor() {
  if (this != internal_default_instance()) delete worker_;
}

void TaskReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskReq::descriptor() {
  ::protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TaskReq& TaskReq::default_instance() {
  ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsTaskReq();
  return *internal_default_instance();
}

TaskReq* TaskReq::New(::google::protobuf::Arena* arena) const {
  TaskReq* n = new TaskReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TaskReq::Clear() {
// @@protoc_insertion_point(message_clear_start:tortuga.TaskReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && worker_ != NULL) {
    delete worker_;
  }
  worker_ = NULL;
  _internal_metadata_.Clear();
}

bool TaskReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tortuga.TaskReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tortuga.Worker worker = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_worker()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tortuga.TaskReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tortuga.TaskReq)
  return false;
#undef DO_
}

void TaskReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tortuga.TaskReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tortuga.Worker worker = 1;
  if (this->has_worker()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->worker_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tortuga.TaskReq)
}

::google::protobuf::uint8* TaskReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tortuga.TaskReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tortuga.Worker worker = 1;
  if (this->has_worker()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->worker_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tortuga.TaskReq)
  return target;
}

size_t TaskReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tortuga.TaskReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tortuga.Worker worker = 1;
  if (this->has_worker()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->worker_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tortuga.TaskReq)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TaskReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tortuga.TaskReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tortuga.TaskReq)
    MergeFrom(*source);
  }
}

void TaskReq::MergeFrom(const TaskReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tortuga.TaskReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_worker()) {
    mutable_worker()->::tortuga::Worker::MergeFrom(from.worker());
  }
}

void TaskReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tortuga.TaskReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskReq::CopyFrom(const TaskReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tortuga.TaskReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskReq::IsInitialized() const {
  return true;
}

void TaskReq::Swap(TaskReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskReq::InternalSwap(TaskReq* other) {
  using std::swap;
  swap(worker_, other->worker_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TaskReq::GetMetadata() const {
  protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TaskResp::InitAsDefaultInstance() {
  ::tortuga::_TaskResp_default_instance_._instance.get_mutable()->data_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void TaskResp::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskResp::kIdFieldNumber;
const int TaskResp::kTypeFieldNumber;
const int TaskResp::kDataFieldNumber;
const int TaskResp::kHandleFieldNumber;
const int TaskResp::kNoneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskResp::TaskResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsTaskResp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tortuga.TaskResp)
}
TaskResp::TaskResp(const TaskResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.handle().size() > 0) {
    handle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handle_);
  }
  if (from.has_data()) {
    data_ = new ::google::protobuf::Any(*from.data_);
  } else {
    data_ = NULL;
  }
  none_ = from.none_;
  // @@protoc_insertion_point(copy_constructor:tortuga.TaskResp)
}

void TaskResp::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&none_) -
      reinterpret_cast<char*>(&data_)) + sizeof(none_));
  _cached_size_ = 0;
}

TaskResp::~TaskResp() {
  // @@protoc_insertion_point(destructor:tortuga.TaskResp)
  SharedDtor();
}

void TaskResp::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  handle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_;
}

void TaskResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskResp::descriptor() {
  ::protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TaskResp& TaskResp::default_instance() {
  ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsTaskResp();
  return *internal_default_instance();
}

TaskResp* TaskResp::New(::google::protobuf::Arena* arena) const {
  TaskResp* n = new TaskResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TaskResp::Clear() {
// @@protoc_insertion_point(message_clear_start:tortuga.TaskResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  handle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  none_ = false;
  _internal_metadata_.Clear();
}

bool TaskResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tortuga.TaskResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.TaskResp.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.TaskResp.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string handle = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_handle()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->handle().data(), static_cast<int>(this->handle().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.TaskResp.handle"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool none = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &none_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tortuga.TaskResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tortuga.TaskResp)
  return false;
#undef DO_
}

void TaskResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tortuga.TaskResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.TaskResp.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.TaskResp.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type(), output);
  }

  // .google.protobuf.Any data = 3;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->data_, output);
  }

  // string handle = 4;
  if (this->handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->handle().data(), static_cast<int>(this->handle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.TaskResp.handle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->handle(), output);
  }

  // bool none = 5;
  if (this->none() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->none(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tortuga.TaskResp)
}

::google::protobuf::uint8* TaskResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tortuga.TaskResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.TaskResp.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.TaskResp.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type(), target);
  }

  // .google.protobuf.Any data = 3;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->data_, deterministic, target);
  }

  // string handle = 4;
  if (this->handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->handle().data(), static_cast<int>(this->handle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.TaskResp.handle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->handle(), target);
  }

  // bool none = 5;
  if (this->none() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->none(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tortuga.TaskResp)
  return target;
}

size_t TaskResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tortuga.TaskResp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string type = 2;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // string handle = 4;
  if (this->handle().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->handle());
  }

  // .google.protobuf.Any data = 3;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->data_);
  }

  // bool none = 5;
  if (this->none() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tortuga.TaskResp)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TaskResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tortuga.TaskResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tortuga.TaskResp)
    MergeFrom(*source);
  }
}

void TaskResp::MergeFrom(const TaskResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tortuga.TaskResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.handle().size() > 0) {

    handle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handle_);
  }
  if (from.has_data()) {
    mutable_data()->::google::protobuf::Any::MergeFrom(from.data());
  }
  if (from.none() != 0) {
    set_none(from.none());
  }
}

void TaskResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tortuga.TaskResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskResp::CopyFrom(const TaskResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tortuga.TaskResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskResp::IsInitialized() const {
  return true;
}

void TaskResp::Swap(TaskResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskResp::InternalSwap(TaskResp* other) {
  using std::swap;
  id_.Swap(&other->id_);
  type_.Swap(&other->type_);
  handle_.Swap(&other->handle_);
  swap(data_, other->data_);
  swap(none_, other->none_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TaskResp::GetMetadata() const {
  protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Task::InitAsDefaultInstance() {
  ::tortuga::_Task_default_instance_._instance.get_mutable()->data_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
  ::tortuga::_Task_default_instance_._instance.get_mutable()->priority_ = const_cast< ::google::protobuf::Int32Value*>(
      ::google::protobuf::Int32Value::internal_default_instance());
  ::tortuga::_Task_default_instance_._instance.get_mutable()->max_retries_ = const_cast< ::google::protobuf::Int32Value*>(
      ::google::protobuf::Int32Value::internal_default_instance());
}
void Task::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
}
void Task::clear_priority() {
  if (GetArenaNoVirtual() == NULL && priority_ != NULL) {
    delete priority_;
  }
  priority_ = NULL;
}
void Task::clear_max_retries() {
  if (GetArenaNoVirtual() == NULL && max_retries_ != NULL) {
    delete max_retries_;
  }
  max_retries_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Task::kIdFieldNumber;
const int Task::kTypeFieldNumber;
const int Task::kDataFieldNumber;
const int Task::kPriorityFieldNumber;
const int Task::kMaxRetriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Task::Task()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsTask();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tortuga.Task)
}
Task::Task(const Task& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.has_data()) {
    data_ = new ::google::protobuf::Any(*from.data_);
  } else {
    data_ = NULL;
  }
  if (from.has_priority()) {
    priority_ = new ::google::protobuf::Int32Value(*from.priority_);
  } else {
    priority_ = NULL;
  }
  if (from.has_max_retries()) {
    max_retries_ = new ::google::protobuf::Int32Value(*from.max_retries_);
  } else {
    max_retries_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tortuga.Task)
}

void Task::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_retries_) -
      reinterpret_cast<char*>(&data_)) + sizeof(max_retries_));
  _cached_size_ = 0;
}

Task::~Task() {
  // @@protoc_insertion_point(destructor:tortuga.Task)
  SharedDtor();
}

void Task::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_;
  if (this != internal_default_instance()) delete priority_;
  if (this != internal_default_instance()) delete max_retries_;
}

void Task::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Task::descriptor() {
  ::protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Task& Task::default_instance() {
  ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsTask();
  return *internal_default_instance();
}

Task* Task::New(::google::protobuf::Arena* arena) const {
  Task* n = new Task;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Task::Clear() {
// @@protoc_insertion_point(message_clear_start:tortuga.Task)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  if (GetArenaNoVirtual() == NULL && priority_ != NULL) {
    delete priority_;
  }
  priority_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_retries_ != NULL) {
    delete max_retries_;
  }
  max_retries_ = NULL;
  _internal_metadata_.Clear();
}

bool Task::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tortuga.Task)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.Task.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.Task.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int32Value priority = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_priority()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int32Value max_retries = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max_retries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tortuga.Task)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tortuga.Task)
  return false;
#undef DO_
}

void Task::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tortuga.Task)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.Task.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.Task.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type(), output);
  }

  // .google.protobuf.Any data = 3;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->data_, output);
  }

  // .google.protobuf.Int32Value priority = 4;
  if (this->has_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->priority_, output);
  }

  // .google.protobuf.Int32Value max_retries = 5;
  if (this->has_max_retries()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->max_retries_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tortuga.Task)
}

::google::protobuf::uint8* Task::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tortuga.Task)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.Task.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.Task.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type(), target);
  }

  // .google.protobuf.Any data = 3;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->data_, deterministic, target);
  }

  // .google.protobuf.Int32Value priority = 4;
  if (this->has_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->priority_, deterministic, target);
  }

  // .google.protobuf.Int32Value max_retries = 5;
  if (this->has_max_retries()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->max_retries_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tortuga.Task)
  return target;
}

size_t Task::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tortuga.Task)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string type = 2;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // .google.protobuf.Any data = 3;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->data_);
  }

  // .google.protobuf.Int32Value priority = 4;
  if (this->has_priority()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->priority_);
  }

  // .google.protobuf.Int32Value max_retries = 5;
  if (this->has_max_retries()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_retries_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Task::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tortuga.Task)
  GOOGLE_DCHECK_NE(&from, this);
  const Task* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Task>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tortuga.Task)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tortuga.Task)
    MergeFrom(*source);
  }
}

void Task::MergeFrom(const Task& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tortuga.Task)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.has_data()) {
    mutable_data()->::google::protobuf::Any::MergeFrom(from.data());
  }
  if (from.has_priority()) {
    mutable_priority()->::google::protobuf::Int32Value::MergeFrom(from.priority());
  }
  if (from.has_max_retries()) {
    mutable_max_retries()->::google::protobuf::Int32Value::MergeFrom(from.max_retries());
  }
}

void Task::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tortuga.Task)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Task::CopyFrom(const Task& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tortuga.Task)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Task::IsInitialized() const {
  return true;
}

void Task::Swap(Task* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Task::InternalSwap(Task* other) {
  using std::swap;
  id_.Swap(&other->id_);
  type_.Swap(&other->type_);
  swap(data_, other->data_);
  swap(priority_, other->priority_);
  swap(max_retries_, other->max_retries_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Task::GetMetadata() const {
  protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateReq::InitAsDefaultInstance() {
  ::tortuga::_CreateReq_default_instance_._instance.get_mutable()->task_ = const_cast< ::tortuga::Task*>(
      ::tortuga::Task::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateReq::kTaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateReq::CreateReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsCreateReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tortuga.CreateReq)
}
CreateReq::CreateReq(const CreateReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_task()) {
    task_ = new ::tortuga::Task(*from.task_);
  } else {
    task_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tortuga.CreateReq)
}

void CreateReq::SharedCtor() {
  task_ = NULL;
  _cached_size_ = 0;
}

CreateReq::~CreateReq() {
  // @@protoc_insertion_point(destructor:tortuga.CreateReq)
  SharedDtor();
}

void CreateReq::SharedDtor() {
  if (this != internal_default_instance()) delete task_;
}

void CreateReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateReq::descriptor() {
  ::protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateReq& CreateReq::default_instance() {
  ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsCreateReq();
  return *internal_default_instance();
}

CreateReq* CreateReq::New(::google::protobuf::Arena* arena) const {
  CreateReq* n = new CreateReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:tortuga.CreateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && task_ != NULL) {
    delete task_;
  }
  task_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tortuga.CreateReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tortuga.Task task = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_task()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tortuga.CreateReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tortuga.CreateReq)
  return false;
#undef DO_
}

void CreateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tortuga.CreateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tortuga.Task task = 1;
  if (this->has_task()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->task_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tortuga.CreateReq)
}

::google::protobuf::uint8* CreateReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tortuga.CreateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tortuga.Task task = 1;
  if (this->has_task()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->task_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tortuga.CreateReq)
  return target;
}

size_t CreateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tortuga.CreateReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tortuga.Task task = 1;
  if (this->has_task()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->task_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tortuga.CreateReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tortuga.CreateReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tortuga.CreateReq)
    MergeFrom(*source);
  }
}

void CreateReq::MergeFrom(const CreateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tortuga.CreateReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_task()) {
    mutable_task()->::tortuga::Task::MergeFrom(from.task());
  }
}

void CreateReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tortuga.CreateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateReq::CopyFrom(const CreateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tortuga.CreateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateReq::IsInitialized() const {
  return true;
}

void CreateReq::Swap(CreateReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateReq::InternalSwap(CreateReq* other) {
  using std::swap;
  swap(task_, other->task_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateReq::GetMetadata() const {
  protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateResp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateResp::kHandleFieldNumber;
const int CreateResp::kCreatedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateResp::CreateResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsCreateResp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tortuga.CreateResp)
}
CreateResp::CreateResp(const CreateResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.handle().size() > 0) {
    handle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handle_);
  }
  created_ = from.created_;
  // @@protoc_insertion_point(copy_constructor:tortuga.CreateResp)
}

void CreateResp::SharedCtor() {
  handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  created_ = false;
  _cached_size_ = 0;
}

CreateResp::~CreateResp() {
  // @@protoc_insertion_point(destructor:tortuga.CreateResp)
  SharedDtor();
}

void CreateResp::SharedDtor() {
  handle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateResp::descriptor() {
  ::protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateResp& CreateResp::default_instance() {
  ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsCreateResp();
  return *internal_default_instance();
}

CreateResp* CreateResp::New(::google::protobuf::Arena* arena) const {
  CreateResp* n = new CreateResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateResp::Clear() {
// @@protoc_insertion_point(message_clear_start:tortuga.CreateResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  handle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  created_ = false;
  _internal_metadata_.Clear();
}

bool CreateResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tortuga.CreateResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_handle()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->handle().data(), static_cast<int>(this->handle().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.CreateResp.handle"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool created = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &created_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tortuga.CreateResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tortuga.CreateResp)
  return false;
#undef DO_
}

void CreateResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tortuga.CreateResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string handle = 1;
  if (this->handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->handle().data(), static_cast<int>(this->handle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.CreateResp.handle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->handle(), output);
  }

  // bool created = 2;
  if (this->created() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->created(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tortuga.CreateResp)
}

::google::protobuf::uint8* CreateResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tortuga.CreateResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string handle = 1;
  if (this->handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->handle().data(), static_cast<int>(this->handle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.CreateResp.handle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->handle(), target);
  }

  // bool created = 2;
  if (this->created() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->created(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tortuga.CreateResp)
  return target;
}

size_t CreateResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tortuga.CreateResp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string handle = 1;
  if (this->handle().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->handle());
  }

  // bool created = 2;
  if (this->created() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tortuga.CreateResp)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tortuga.CreateResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tortuga.CreateResp)
    MergeFrom(*source);
  }
}

void CreateResp::MergeFrom(const CreateResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tortuga.CreateResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.handle().size() > 0) {

    handle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handle_);
  }
  if (from.created() != 0) {
    set_created(from.created());
  }
}

void CreateResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tortuga.CreateResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateResp::CopyFrom(const CreateResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tortuga.CreateResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateResp::IsInitialized() const {
  return true;
}

void CreateResp::Swap(CreateResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateResp::InternalSwap(CreateResp* other) {
  using std::swap;
  handle_.Swap(&other->handle_);
  swap(created_, other->created_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateResp::GetMetadata() const {
  protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CompleteTaskReq::InitAsDefaultInstance() {
  ::tortuga::_CompleteTaskReq_default_instance_._instance.get_mutable()->worker_ = const_cast< ::tortuga::Worker*>(
      ::tortuga::Worker::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CompleteTaskReq::kWorkerFieldNumber;
const int CompleteTaskReq::kHandleFieldNumber;
const int CompleteTaskReq::kCodeFieldNumber;
const int CompleteTaskReq::kErrorMessageFieldNumber;
const int CompleteTaskReq::kLogsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompleteTaskReq::CompleteTaskReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsCompleteTaskReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tortuga.CompleteTaskReq)
}
CompleteTaskReq::CompleteTaskReq(const CompleteTaskReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.handle().size() > 0) {
    handle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handle_);
  }
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_message().size() > 0) {
    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  logs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.logs().size() > 0) {
    logs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logs_);
  }
  if (from.has_worker()) {
    worker_ = new ::tortuga::Worker(*from.worker_);
  } else {
    worker_ = NULL;
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:tortuga.CompleteTaskReq)
}

void CompleteTaskReq::SharedCtor() {
  handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&worker_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&worker_)) + sizeof(code_));
  _cached_size_ = 0;
}

CompleteTaskReq::~CompleteTaskReq() {
  // @@protoc_insertion_point(destructor:tortuga.CompleteTaskReq)
  SharedDtor();
}

void CompleteTaskReq::SharedDtor() {
  handle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logs_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete worker_;
}

void CompleteTaskReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CompleteTaskReq::descriptor() {
  ::protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CompleteTaskReq& CompleteTaskReq::default_instance() {
  ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsCompleteTaskReq();
  return *internal_default_instance();
}

CompleteTaskReq* CompleteTaskReq::New(::google::protobuf::Arena* arena) const {
  CompleteTaskReq* n = new CompleteTaskReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CompleteTaskReq::Clear() {
// @@protoc_insertion_point(message_clear_start:tortuga.CompleteTaskReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  handle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logs_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && worker_ != NULL) {
    delete worker_;
  }
  worker_ = NULL;
  code_ = 0;
  _internal_metadata_.Clear();
}

bool CompleteTaskReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tortuga.CompleteTaskReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tortuga.Worker worker = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_worker()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string handle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_handle()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->handle().data(), static_cast<int>(this->handle().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.CompleteTaskReq.handle"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error_message = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_message().data(), static_cast<int>(this->error_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.CompleteTaskReq.error_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string logs = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_logs()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->logs().data(), static_cast<int>(this->logs().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.CompleteTaskReq.logs"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tortuga.CompleteTaskReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tortuga.CompleteTaskReq)
  return false;
#undef DO_
}

void CompleteTaskReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tortuga.CompleteTaskReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tortuga.Worker worker = 1;
  if (this->has_worker()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->worker_, output);
  }

  // string handle = 2;
  if (this->handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->handle().data(), static_cast<int>(this->handle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.CompleteTaskReq.handle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->handle(), output);
  }

  // int32 code = 3;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->code(), output);
  }

  // string error_message = 4;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.CompleteTaskReq.error_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->error_message(), output);
  }

  // string logs = 5;
  if (this->logs().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logs().data(), static_cast<int>(this->logs().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.CompleteTaskReq.logs");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->logs(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tortuga.CompleteTaskReq)
}

::google::protobuf::uint8* CompleteTaskReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tortuga.CompleteTaskReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tortuga.Worker worker = 1;
  if (this->has_worker()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->worker_, deterministic, target);
  }

  // string handle = 2;
  if (this->handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->handle().data(), static_cast<int>(this->handle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.CompleteTaskReq.handle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->handle(), target);
  }

  // int32 code = 3;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->code(), target);
  }

  // string error_message = 4;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.CompleteTaskReq.error_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->error_message(), target);
  }

  // string logs = 5;
  if (this->logs().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logs().data(), static_cast<int>(this->logs().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.CompleteTaskReq.logs");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->logs(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tortuga.CompleteTaskReq)
  return target;
}

size_t CompleteTaskReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tortuga.CompleteTaskReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string handle = 2;
  if (this->handle().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->handle());
  }

  // string error_message = 4;
  if (this->error_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_message());
  }

  // string logs = 5;
  if (this->logs().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->logs());
  }

  // .tortuga.Worker worker = 1;
  if (this->has_worker()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->worker_);
  }

  // int32 code = 3;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CompleteTaskReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tortuga.CompleteTaskReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CompleteTaskReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CompleteTaskReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tortuga.CompleteTaskReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tortuga.CompleteTaskReq)
    MergeFrom(*source);
  }
}

void CompleteTaskReq::MergeFrom(const CompleteTaskReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tortuga.CompleteTaskReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.handle().size() > 0) {

    handle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handle_);
  }
  if (from.error_message().size() > 0) {

    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  if (from.logs().size() > 0) {

    logs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logs_);
  }
  if (from.has_worker()) {
    mutable_worker()->::tortuga::Worker::MergeFrom(from.worker());
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void CompleteTaskReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tortuga.CompleteTaskReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompleteTaskReq::CopyFrom(const CompleteTaskReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tortuga.CompleteTaskReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompleteTaskReq::IsInitialized() const {
  return true;
}

void CompleteTaskReq::Swap(CompleteTaskReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CompleteTaskReq::InternalSwap(CompleteTaskReq* other) {
  using std::swap;
  handle_.Swap(&other->handle_);
  error_message_.Swap(&other->error_message_);
  logs_.Swap(&other->logs_);
  swap(worker_, other->worker_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CompleteTaskReq::GetMetadata() const {
  protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tortuga

// @@protoc_insertion_point(global_scope)

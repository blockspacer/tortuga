// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tortuga/tortuga.proto

#include "tortuga/tortuga.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace tortuga {
class WorkerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Worker>
      _instance;
} _Worker_default_instance_;
class HeartbeatReq_WorkerBeatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HeartbeatReq_WorkerBeat>
      _instance;
} _HeartbeatReq_WorkerBeat_default_instance_;
class HeartbeatReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HeartbeatReq>
      _instance;
} _HeartbeatReq_default_instance_;
class TaskReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TaskReq>
      _instance;
} _TaskReq_default_instance_;
class TaskResp_RetryContextDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TaskResp_RetryContext>
      _instance;
} _TaskResp_RetryContext_default_instance_;
class TaskRespDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TaskResp>
      _instance;
} _TaskResp_default_instance_;
class TaskDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Task>
      _instance;
} _Task_default_instance_;
class TaskProgressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TaskProgress>
      _instance;
} _TaskProgress_default_instance_;
class CreateReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateReq>
      _instance;
} _CreateReq_default_instance_;
class CreateRespDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateResp>
      _instance;
} _CreateResp_default_instance_;
class CompleteTaskReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CompleteTaskReq>
      _instance;
} _CompleteTaskReq_default_instance_;
class UpdateProgressReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateProgressReq>
      _instance;
} _UpdateProgressReq_default_instance_;
class ProgressReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProgressReq>
      _instance;
} _ProgressReq_default_instance_;
class ProgressRespDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProgressResp>
      _instance;
} _ProgressResp_default_instance_;
class TaskIdentifierDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TaskIdentifier>
      _instance;
} _TaskIdentifier_default_instance_;
class FindTaskReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FindTaskReq>
      _instance;
} _FindTaskReq_default_instance_;
class MysqlParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MysqlParams>
      _instance;
} _MysqlParams_default_instance_;
}  // namespace tortuga
namespace protobuf_tortuga_2ftortuga_2eproto {
void InitDefaultsWorkerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::tortuga::_Worker_default_instance_;
    new (ptr) ::tortuga::Worker();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tortuga::Worker::InitAsDefaultInstance();
}

void InitDefaultsWorker() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWorkerImpl);
}

void InitDefaultsHeartbeatReq_WorkerBeatImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_tortuga_2ftortuga_2eproto::InitDefaultsWorker();
  {
    void* ptr = &::tortuga::_HeartbeatReq_WorkerBeat_default_instance_;
    new (ptr) ::tortuga::HeartbeatReq_WorkerBeat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tortuga::HeartbeatReq_WorkerBeat::InitAsDefaultInstance();
}

void InitDefaultsHeartbeatReq_WorkerBeat() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHeartbeatReq_WorkerBeatImpl);
}

void InitDefaultsHeartbeatReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_tortuga_2ftortuga_2eproto::InitDefaultsHeartbeatReq_WorkerBeat();
  {
    void* ptr = &::tortuga::_HeartbeatReq_default_instance_;
    new (ptr) ::tortuga::HeartbeatReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tortuga::HeartbeatReq::InitAsDefaultInstance();
}

void InitDefaultsHeartbeatReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHeartbeatReqImpl);
}

void InitDefaultsTaskReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_tortuga_2ftortuga_2eproto::InitDefaultsWorker();
  {
    void* ptr = &::tortuga::_TaskReq_default_instance_;
    new (ptr) ::tortuga::TaskReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tortuga::TaskReq::InitAsDefaultInstance();
}

void InitDefaultsTaskReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTaskReqImpl);
}

void InitDefaultsTaskResp_RetryContextImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::tortuga::_TaskResp_RetryContext_default_instance_;
    new (ptr) ::tortuga::TaskResp_RetryContext();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tortuga::TaskResp_RetryContext::InitAsDefaultInstance();
}

void InitDefaultsTaskResp_RetryContext() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTaskResp_RetryContextImpl);
}

void InitDefaultsTaskRespImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  protobuf_tortuga_2ftortuga_2eproto::InitDefaultsTaskResp_RetryContext();
  {
    void* ptr = &::tortuga::_TaskResp_default_instance_;
    new (ptr) ::tortuga::TaskResp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tortuga::TaskResp::InitAsDefaultInstance();
}

void InitDefaultsTaskResp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTaskRespImpl);
}

void InitDefaultsTaskImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  protobuf_google_2fprotobuf_2fwrappers_2eproto::InitDefaultsInt32Value();
  protobuf_google_2fprotobuf_2fduration_2eproto::InitDefaultsDuration();
  {
    void* ptr = &::tortuga::_Task_default_instance_;
    new (ptr) ::tortuga::Task();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tortuga::Task::InitAsDefaultInstance();
}

void InitDefaultsTask() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTaskImpl);
}

void InitDefaultsTaskProgressImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaultsTimestamp();
  protobuf_google_2frpc_2fstatus_2eproto::InitDefaultsStatus();
  {
    void* ptr = &::tortuga::_TaskProgress_default_instance_;
    new (ptr) ::tortuga::TaskProgress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tortuga::TaskProgress::InitAsDefaultInstance();
}

void InitDefaultsTaskProgress() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTaskProgressImpl);
}

void InitDefaultsCreateReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_tortuga_2ftortuga_2eproto::InitDefaultsTask();
  {
    void* ptr = &::tortuga::_CreateReq_default_instance_;
    new (ptr) ::tortuga::CreateReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tortuga::CreateReq::InitAsDefaultInstance();
}

void InitDefaultsCreateReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateReqImpl);
}

void InitDefaultsCreateRespImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::tortuga::_CreateResp_default_instance_;
    new (ptr) ::tortuga::CreateResp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tortuga::CreateResp::InitAsDefaultInstance();
}

void InitDefaultsCreateResp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateRespImpl);
}

void InitDefaultsCompleteTaskReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_tortuga_2ftortuga_2eproto::InitDefaultsWorker();
  {
    void* ptr = &::tortuga::_CompleteTaskReq_default_instance_;
    new (ptr) ::tortuga::CompleteTaskReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tortuga::CompleteTaskReq::InitAsDefaultInstance();
}

void InitDefaultsCompleteTaskReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCompleteTaskReqImpl);
}

void InitDefaultsUpdateProgressReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_tortuga_2ftortuga_2eproto::InitDefaultsWorker();
  protobuf_google_2fprotobuf_2fwrappers_2eproto::InitDefaultsFloatValue();
  protobuf_google_2fprotobuf_2fwrappers_2eproto::InitDefaultsStringValue();
  {
    void* ptr = &::tortuga::_UpdateProgressReq_default_instance_;
    new (ptr) ::tortuga::UpdateProgressReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tortuga::UpdateProgressReq::InitAsDefaultInstance();
}

void InitDefaultsUpdateProgressReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUpdateProgressReqImpl);
}

void InitDefaultsProgressReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::tortuga::_ProgressReq_default_instance_;
    new (ptr) ::tortuga::ProgressReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tortuga::ProgressReq::InitAsDefaultInstance();
}

void InitDefaultsProgressReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProgressReqImpl);
}

void InitDefaultsProgressRespImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2frpc_2fstatus_2eproto::InitDefaultsStatus();
  {
    void* ptr = &::tortuga::_ProgressResp_default_instance_;
    new (ptr) ::tortuga::ProgressResp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tortuga::ProgressResp::InitAsDefaultInstance();
}

void InitDefaultsProgressResp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProgressRespImpl);
}

void InitDefaultsTaskIdentifierImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::tortuga::_TaskIdentifier_default_instance_;
    new (ptr) ::tortuga::TaskIdentifier();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tortuga::TaskIdentifier::InitAsDefaultInstance();
}

void InitDefaultsTaskIdentifier() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTaskIdentifierImpl);
}

void InitDefaultsFindTaskReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::tortuga::_FindTaskReq_default_instance_;
    new (ptr) ::tortuga::FindTaskReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tortuga::FindTaskReq::InitAsDefaultInstance();
}

void InitDefaultsFindTaskReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFindTaskReqImpl);
}

void InitDefaultsMysqlParamsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::tortuga::_MysqlParams_default_instance_;
    new (ptr) ::tortuga::MysqlParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tortuga::MysqlParams::InitAsDefaultInstance();
}

void InitDefaultsMysqlParams() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMysqlParamsImpl);
}

::google::protobuf::Metadata file_level_metadata[17];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::Worker, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::Worker, worker_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::Worker, uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::Worker, capabilities_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::HeartbeatReq_WorkerBeat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::HeartbeatReq_WorkerBeat, worker_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::HeartbeatReq_WorkerBeat, current_task_handles_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::HeartbeatReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::HeartbeatReq, worker_beats_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskReq, worker_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskResp_RetryContext, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskResp_RetryContext, retries_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskResp_RetryContext, progress_metadata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskResp, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskResp, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskResp, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskResp, handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskResp, none_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskResp, retry_ctx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskResp, priority_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::Task, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::Task, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::Task, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::Task, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::Task, priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::Task, max_retries_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::Task, delay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::Task, modules_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskProgress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskProgress, handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskProgress, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskProgress, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskProgress, max_retries_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskProgress, retries_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskProgress, priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskProgress, worked_on_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskProgress, done_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskProgress, created_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskProgress, started_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskProgress, done_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskProgress, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskProgress, progress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskProgress, progress_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskProgress, progress_metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskProgress, logs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskProgress, worker_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskProgress, output_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::CreateReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::CreateReq, task_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::CreateResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::CreateResp, handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::CreateResp, created_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::CompleteTaskReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::CompleteTaskReq, worker_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::CompleteTaskReq, handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::CompleteTaskReq, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::CompleteTaskReq, error_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::CompleteTaskReq, logs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::CompleteTaskReq, output_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::UpdateProgressReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::UpdateProgressReq, worker_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::UpdateProgressReq, handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::UpdateProgressReq, progress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::UpdateProgressReq, progress_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::UpdateProgressReq, progress_metadata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::ProgressReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::ProgressReq, handle_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::ProgressResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::ProgressResp, handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::ProgressResp, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskIdentifier, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskIdentifier, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::TaskIdentifier, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::FindTaskReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::FindTaskReq, handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::FindTaskReq, is_for_done_only_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::MysqlParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::MysqlParams, host_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::MysqlParams, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::MysqlParams, user_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::MysqlParams, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tortuga::MysqlParams, database_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tortuga::Worker)},
  { 8, -1, sizeof(::tortuga::HeartbeatReq_WorkerBeat)},
  { 15, -1, sizeof(::tortuga::HeartbeatReq)},
  { 21, -1, sizeof(::tortuga::TaskReq)},
  { 27, -1, sizeof(::tortuga::TaskResp_RetryContext)},
  { 34, -1, sizeof(::tortuga::TaskResp)},
  { 46, -1, sizeof(::tortuga::Task)},
  { 58, -1, sizeof(::tortuga::TaskProgress)},
  { 81, -1, sizeof(::tortuga::CreateReq)},
  { 87, -1, sizeof(::tortuga::CreateResp)},
  { 94, -1, sizeof(::tortuga::CompleteTaskReq)},
  { 105, -1, sizeof(::tortuga::UpdateProgressReq)},
  { 115, -1, sizeof(::tortuga::ProgressReq)},
  { 121, -1, sizeof(::tortuga::ProgressResp)},
  { 128, -1, sizeof(::tortuga::TaskIdentifier)},
  { 135, -1, sizeof(::tortuga::FindTaskReq)},
  { 142, -1, sizeof(::tortuga::MysqlParams)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tortuga::_Worker_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tortuga::_HeartbeatReq_WorkerBeat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tortuga::_HeartbeatReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tortuga::_TaskReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tortuga::_TaskResp_RetryContext_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tortuga::_TaskResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tortuga::_Task_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tortuga::_TaskProgress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tortuga::_CreateReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tortuga::_CreateResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tortuga::_CompleteTaskReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tortuga::_UpdateProgressReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tortuga::_ProgressReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tortuga::_ProgressResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tortuga::_TaskIdentifier_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tortuga::_FindTaskReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tortuga::_MysqlParams_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "tortuga/tortuga.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 17);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025tortuga/tortuga.proto\022\007tortuga\032\031google"
      "/protobuf/any.proto\032\036google/protobuf/dur"
      "ation.proto\032\033google/protobuf/empty.proto"
      "\032\037google/protobuf/timestamp.proto\032\036googl"
      "e/protobuf/wrappers.proto\032\027google/rpc/st"
      "atus.proto\"\?\n\006Worker\022\021\n\tworker_id\030\001 \001(\t\022"
      "\014\n\004uuid\030\002 \001(\t\022\024\n\014capabilities\030\003 \003(\t\"\223\001\n\014"
      "HeartbeatReq\0226\n\014worker_beats\030\001 \003(\0132 .tor"
      "tuga.HeartbeatReq.WorkerBeat\032K\n\nWorkerBe"
      "at\022\037\n\006worker\030\001 \001(\0132\017.tortuga.Worker\022\034\n\024c"
      "urrent_task_handles\030\002 \003(\003\"*\n\007TaskReq\022\037\n\006"
      "worker\030\001 \001(\0132\017.tortuga.Worker\"\347\001\n\010TaskRe"
      "sp\022\n\n\002id\030\001 \001(\t\022\014\n\004type\030\002 \001(\t\022\"\n\004data\030\003 \001"
      "(\0132\024.google.protobuf.Any\022\016\n\006handle\030\004 \001(\t"
      "\022\014\n\004none\030\005 \001(\010\0221\n\tretry_ctx\030\006 \001(\0132\036.tort"
      "uga.TaskResp.RetryContext\022\020\n\010priority\030\007 "
      "\001(\005\032:\n\014RetryContext\022\017\n\007retries\030\001 \001(\005\022\031\n\021"
      "progress_metadata\030\002 \001(\t\"\340\001\n\004Task\022\n\n\002id\030\001"
      " \001(\t\022\014\n\004type\030\002 \001(\t\022\"\n\004data\030\003 \001(\0132\024.googl"
      "e.protobuf.Any\022-\n\010priority\030\004 \001(\0132\033.googl"
      "e.protobuf.Int32Value\0220\n\013max_retries\030\005 \001"
      "(\0132\033.google.protobuf.Int32Value\022(\n\005delay"
      "\030\006 \001(\0132\031.google.protobuf.Duration\022\017\n\007mod"
      "ules\030\007 \003(\t\"\273\003\n\014TaskProgress\022\016\n\006handle\030\001 "
      "\001(\t\022\n\n\002id\030\002 \001(\t\022\014\n\004type\030\003 \001(\t\022\023\n\013max_ret"
      "ries\030\004 \001(\005\022\017\n\007retries\030\005 \001(\005\022\020\n\010priority\030"
      "\006 \001(\005\022\021\n\tworked_on\030\007 \001(\010\022\014\n\004done\030\010 \001(\010\022+"
      "\n\007created\030\t \001(\0132\032.google.protobuf.Timest"
      "amp\0220\n\014started_time\030\n \001(\0132\032.google.proto"
      "buf.Timestamp\022-\n\tdone_time\030\013 \001(\0132\032.googl"
      "e.protobuf.Timestamp\022\"\n\006status\030\014 \001(\0132\022.g"
      "oogle.rpc.Status\022\020\n\010progress\030\r \001(\002\022\030\n\020pr"
      "ogress_message\030\016 \001(\t\022\031\n\021progress_metadat"
      "a\030\022 \001(\t\022\014\n\004logs\030\017 \001(\t\022\021\n\tworker_id\030\020 \001(\t"
      "\022\016\n\006output\030\021 \001(\t\"(\n\tCreateReq\022\033\n\004task\030\001 "
      "\001(\0132\r.tortuga.Task\"-\n\nCreateResp\022\016\n\006hand"
      "le\030\001 \001(\t\022\017\n\007created\030\002 \001(\010\"\205\001\n\017CompleteTa"
      "skReq\022\037\n\006worker\030\001 \001(\0132\017.tortuga.Worker\022\016"
      "\n\006handle\030\002 \001(\t\022\014\n\004code\030\003 \001(\005\022\025\n\rerror_me"
      "ssage\030\004 \001(\t\022\014\n\004logs\030\005 \001(\t\022\016\n\006output\030\006 \001("
      "\t\"\344\001\n\021UpdateProgressReq\022\037\n\006worker\030\001 \001(\0132"
      "\017.tortuga.Worker\022\016\n\006handle\030\002 \001(\t\022-\n\010prog"
      "ress\030\003 \001(\0132\033.google.protobuf.FloatValue\022"
      "6\n\020progress_message\030\004 \001(\0132\034.google.proto"
      "buf.StringValue\0227\n\021progress_metadata\030\005 \001"
      "(\0132\034.google.protobuf.StringValue\"\035\n\013Prog"
      "ressReq\022\016\n\006handle\030\001 \001(\t\"B\n\014ProgressResp\022"
      "\016\n\006handle\030\001 \001(\t\022\"\n\006status\030\002 \001(\0132\022.google"
      ".rpc.Status\"*\n\016TaskIdentifier\022\n\n\002id\030\001 \001("
      "\t\022\014\n\004type\030\002 \001(\t\"7\n\013FindTaskReq\022\016\n\006handle"
      "\030\001 \001(\003\022\030\n\020is_for_done_only\030\002 \001(\010\"[\n\013Mysq"
      "lParams\022\014\n\004host\030\001 \001(\t\022\014\n\004port\030\002 \001(\005\022\014\n\004u"
      "ser\030\003 \001(\t\022\020\n\010password\030\004 \001(\t\022\020\n\010database\030"
      "\005 \001(\t2\255\004\n\007Tortuga\0225\n\nCreateTask\022\022.tortug"
      "a.CreateReq\032\023.tortuga.CreateResp\0222\n\013Requ"
      "estTask\022\020.tortuga.TaskReq\032\021.tortuga.Task"
      "Resp\022:\n\tHeartbeat\022\025.tortuga.HeartbeatReq"
      "\032\026.google.protobuf.Empty\022@\n\014CompleteTask"
      "\022\030.tortuga.CompleteTaskReq\032\026.google.prot"
      "obuf.Empty\022D\n\016UpdateProgress\022\032.tortuga.U"
      "pdateProgressReq\032\026.google.protobuf.Empty"
      "\022:\n\010FindTask\022\027.tortuga.TaskIdentifier\032\025."
      "tortuga.TaskProgress\022\?\n\020FindTaskByHandle"
      "\022\024.tortuga.FindTaskReq\032\025.tortuga.TaskPro"
      "gress\0226\n\004Ping\022\026.google.protobuf.Empty\032\026."
      "google.protobuf.Empty\022>\n\014QuitQuitQuit\022\026."
      "google.protobuf.Empty\032\026.google.protobuf."
      "EmptyB\032\n\nio.tortugaB\014TortugaProtob\006proto"
      "3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2721);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tortuga/tortuga.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fwrappers_2eproto::AddDescriptors();
  ::protobuf_google_2frpc_2fstatus_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tortuga_2ftortuga_2eproto
namespace tortuga {

// ===================================================================

void Worker::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Worker::kWorkerIdFieldNumber;
const int Worker::kUuidFieldNumber;
const int Worker::kCapabilitiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Worker::Worker()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsWorker();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tortuga.Worker)
}
Worker::Worker(const Worker& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      capabilities_(from.capabilities_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  worker_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.worker_id().size() > 0) {
    worker_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worker_id_);
  }
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  // @@protoc_insertion_point(copy_constructor:tortuga.Worker)
}

void Worker::SharedCtor() {
  worker_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Worker::~Worker() {
  // @@protoc_insertion_point(destructor:tortuga.Worker)
  SharedDtor();
}

void Worker::SharedDtor() {
  worker_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Worker::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Worker::descriptor() {
  ::protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Worker& Worker::default_instance() {
  ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsWorker();
  return *internal_default_instance();
}

Worker* Worker::New(::google::protobuf::Arena* arena) const {
  Worker* n = new Worker;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Worker::Clear() {
// @@protoc_insertion_point(message_clear_start:tortuga.Worker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  capabilities_.Clear();
  worker_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Worker::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tortuga.Worker)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string worker_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_worker_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->worker_id().data(), static_cast<int>(this->worker_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.Worker.worker_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uuid().data(), static_cast<int>(this->uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.Worker.uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string capabilities = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_capabilities()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->capabilities(this->capabilities_size() - 1).data(),
            static_cast<int>(this->capabilities(this->capabilities_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.Worker.capabilities"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tortuga.Worker)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tortuga.Worker)
  return false;
#undef DO_
}

void Worker::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tortuga.Worker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string worker_id = 1;
  if (this->worker_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->worker_id().data(), static_cast<int>(this->worker_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.Worker.worker_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->worker_id(), output);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.Worker.uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uuid(), output);
  }

  // repeated string capabilities = 3;
  for (int i = 0, n = this->capabilities_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->capabilities(i).data(), static_cast<int>(this->capabilities(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.Worker.capabilities");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->capabilities(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tortuga.Worker)
}

::google::protobuf::uint8* Worker::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tortuga.Worker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string worker_id = 1;
  if (this->worker_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->worker_id().data(), static_cast<int>(this->worker_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.Worker.worker_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->worker_id(), target);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.Worker.uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uuid(), target);
  }

  // repeated string capabilities = 3;
  for (int i = 0, n = this->capabilities_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->capabilities(i).data(), static_cast<int>(this->capabilities(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.Worker.capabilities");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->capabilities(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tortuga.Worker)
  return target;
}

size_t Worker::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tortuga.Worker)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string capabilities = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->capabilities_size());
  for (int i = 0, n = this->capabilities_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->capabilities(i));
  }

  // string worker_id = 1;
  if (this->worker_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->worker_id());
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Worker::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tortuga.Worker)
  GOOGLE_DCHECK_NE(&from, this);
  const Worker* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Worker>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tortuga.Worker)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tortuga.Worker)
    MergeFrom(*source);
  }
}

void Worker::MergeFrom(const Worker& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tortuga.Worker)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  capabilities_.MergeFrom(from.capabilities_);
  if (from.worker_id().size() > 0) {

    worker_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worker_id_);
  }
  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
}

void Worker::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tortuga.Worker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Worker::CopyFrom(const Worker& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tortuga.Worker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Worker::IsInitialized() const {
  return true;
}

void Worker::Swap(Worker* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Worker::InternalSwap(Worker* other) {
  using std::swap;
  capabilities_.InternalSwap(&other->capabilities_);
  worker_id_.Swap(&other->worker_id_);
  uuid_.Swap(&other->uuid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Worker::GetMetadata() const {
  protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HeartbeatReq_WorkerBeat::InitAsDefaultInstance() {
  ::tortuga::_HeartbeatReq_WorkerBeat_default_instance_._instance.get_mutable()->worker_ = const_cast< ::tortuga::Worker*>(
      ::tortuga::Worker::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HeartbeatReq_WorkerBeat::kWorkerFieldNumber;
const int HeartbeatReq_WorkerBeat::kCurrentTaskHandlesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeartbeatReq_WorkerBeat::HeartbeatReq_WorkerBeat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsHeartbeatReq_WorkerBeat();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tortuga.HeartbeatReq.WorkerBeat)
}
HeartbeatReq_WorkerBeat::HeartbeatReq_WorkerBeat(const HeartbeatReq_WorkerBeat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      current_task_handles_(from.current_task_handles_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_worker()) {
    worker_ = new ::tortuga::Worker(*from.worker_);
  } else {
    worker_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tortuga.HeartbeatReq.WorkerBeat)
}

void HeartbeatReq_WorkerBeat::SharedCtor() {
  worker_ = NULL;
  _cached_size_ = 0;
}

HeartbeatReq_WorkerBeat::~HeartbeatReq_WorkerBeat() {
  // @@protoc_insertion_point(destructor:tortuga.HeartbeatReq.WorkerBeat)
  SharedDtor();
}

void HeartbeatReq_WorkerBeat::SharedDtor() {
  if (this != internal_default_instance()) delete worker_;
}

void HeartbeatReq_WorkerBeat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeartbeatReq_WorkerBeat::descriptor() {
  ::protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HeartbeatReq_WorkerBeat& HeartbeatReq_WorkerBeat::default_instance() {
  ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsHeartbeatReq_WorkerBeat();
  return *internal_default_instance();
}

HeartbeatReq_WorkerBeat* HeartbeatReq_WorkerBeat::New(::google::protobuf::Arena* arena) const {
  HeartbeatReq_WorkerBeat* n = new HeartbeatReq_WorkerBeat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HeartbeatReq_WorkerBeat::Clear() {
// @@protoc_insertion_point(message_clear_start:tortuga.HeartbeatReq.WorkerBeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  current_task_handles_.Clear();
  if (GetArenaNoVirtual() == NULL && worker_ != NULL) {
    delete worker_;
  }
  worker_ = NULL;
  _internal_metadata_.Clear();
}

bool HeartbeatReq_WorkerBeat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tortuga.HeartbeatReq.WorkerBeat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tortuga.Worker worker = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_worker()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 current_task_handles = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_current_task_handles())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18u, input, this->mutable_current_task_handles())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tortuga.HeartbeatReq.WorkerBeat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tortuga.HeartbeatReq.WorkerBeat)
  return false;
#undef DO_
}

void HeartbeatReq_WorkerBeat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tortuga.HeartbeatReq.WorkerBeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tortuga.Worker worker = 1;
  if (this->has_worker()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->worker_, output);
  }

  // repeated int64 current_task_handles = 2;
  if (this->current_task_handles_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _current_task_handles_cached_byte_size_));
  }
  for (int i = 0, n = this->current_task_handles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->current_task_handles(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tortuga.HeartbeatReq.WorkerBeat)
}

::google::protobuf::uint8* HeartbeatReq_WorkerBeat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tortuga.HeartbeatReq.WorkerBeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tortuga.Worker worker = 1;
  if (this->has_worker()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->worker_, deterministic, target);
  }

  // repeated int64 current_task_handles = 2;
  if (this->current_task_handles_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _current_task_handles_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->current_task_handles_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tortuga.HeartbeatReq.WorkerBeat)
  return target;
}

size_t HeartbeatReq_WorkerBeat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tortuga.HeartbeatReq.WorkerBeat)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 current_task_handles = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->current_task_handles_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _current_task_handles_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .tortuga.Worker worker = 1;
  if (this->has_worker()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->worker_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeartbeatReq_WorkerBeat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tortuga.HeartbeatReq.WorkerBeat)
  GOOGLE_DCHECK_NE(&from, this);
  const HeartbeatReq_WorkerBeat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HeartbeatReq_WorkerBeat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tortuga.HeartbeatReq.WorkerBeat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tortuga.HeartbeatReq.WorkerBeat)
    MergeFrom(*source);
  }
}

void HeartbeatReq_WorkerBeat::MergeFrom(const HeartbeatReq_WorkerBeat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tortuga.HeartbeatReq.WorkerBeat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  current_task_handles_.MergeFrom(from.current_task_handles_);
  if (from.has_worker()) {
    mutable_worker()->::tortuga::Worker::MergeFrom(from.worker());
  }
}

void HeartbeatReq_WorkerBeat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tortuga.HeartbeatReq.WorkerBeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartbeatReq_WorkerBeat::CopyFrom(const HeartbeatReq_WorkerBeat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tortuga.HeartbeatReq.WorkerBeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartbeatReq_WorkerBeat::IsInitialized() const {
  return true;
}

void HeartbeatReq_WorkerBeat::Swap(HeartbeatReq_WorkerBeat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeartbeatReq_WorkerBeat::InternalSwap(HeartbeatReq_WorkerBeat* other) {
  using std::swap;
  current_task_handles_.InternalSwap(&other->current_task_handles_);
  swap(worker_, other->worker_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HeartbeatReq_WorkerBeat::GetMetadata() const {
  protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HeartbeatReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HeartbeatReq::kWorkerBeatsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeartbeatReq::HeartbeatReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsHeartbeatReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tortuga.HeartbeatReq)
}
HeartbeatReq::HeartbeatReq(const HeartbeatReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      worker_beats_(from.worker_beats_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tortuga.HeartbeatReq)
}

void HeartbeatReq::SharedCtor() {
  _cached_size_ = 0;
}

HeartbeatReq::~HeartbeatReq() {
  // @@protoc_insertion_point(destructor:tortuga.HeartbeatReq)
  SharedDtor();
}

void HeartbeatReq::SharedDtor() {
}

void HeartbeatReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeartbeatReq::descriptor() {
  ::protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HeartbeatReq& HeartbeatReq::default_instance() {
  ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsHeartbeatReq();
  return *internal_default_instance();
}

HeartbeatReq* HeartbeatReq::New(::google::protobuf::Arena* arena) const {
  HeartbeatReq* n = new HeartbeatReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HeartbeatReq::Clear() {
// @@protoc_insertion_point(message_clear_start:tortuga.HeartbeatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  worker_beats_.Clear();
  _internal_metadata_.Clear();
}

bool HeartbeatReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tortuga.HeartbeatReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tortuga.HeartbeatReq.WorkerBeat worker_beats = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_worker_beats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tortuga.HeartbeatReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tortuga.HeartbeatReq)
  return false;
#undef DO_
}

void HeartbeatReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tortuga.HeartbeatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tortuga.HeartbeatReq.WorkerBeat worker_beats = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->worker_beats_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->worker_beats(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tortuga.HeartbeatReq)
}

::google::protobuf::uint8* HeartbeatReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tortuga.HeartbeatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tortuga.HeartbeatReq.WorkerBeat worker_beats = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->worker_beats_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->worker_beats(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tortuga.HeartbeatReq)
  return target;
}

size_t HeartbeatReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tortuga.HeartbeatReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tortuga.HeartbeatReq.WorkerBeat worker_beats = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->worker_beats_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->worker_beats(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeartbeatReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tortuga.HeartbeatReq)
  GOOGLE_DCHECK_NE(&from, this);
  const HeartbeatReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HeartbeatReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tortuga.HeartbeatReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tortuga.HeartbeatReq)
    MergeFrom(*source);
  }
}

void HeartbeatReq::MergeFrom(const HeartbeatReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tortuga.HeartbeatReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  worker_beats_.MergeFrom(from.worker_beats_);
}

void HeartbeatReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tortuga.HeartbeatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartbeatReq::CopyFrom(const HeartbeatReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tortuga.HeartbeatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartbeatReq::IsInitialized() const {
  return true;
}

void HeartbeatReq::Swap(HeartbeatReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeartbeatReq::InternalSwap(HeartbeatReq* other) {
  using std::swap;
  worker_beats_.InternalSwap(&other->worker_beats_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HeartbeatReq::GetMetadata() const {
  protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TaskReq::InitAsDefaultInstance() {
  ::tortuga::_TaskReq_default_instance_._instance.get_mutable()->worker_ = const_cast< ::tortuga::Worker*>(
      ::tortuga::Worker::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskReq::kWorkerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskReq::TaskReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsTaskReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tortuga.TaskReq)
}
TaskReq::TaskReq(const TaskReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_worker()) {
    worker_ = new ::tortuga::Worker(*from.worker_);
  } else {
    worker_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tortuga.TaskReq)
}

void TaskReq::SharedCtor() {
  worker_ = NULL;
  _cached_size_ = 0;
}

TaskReq::~TaskReq() {
  // @@protoc_insertion_point(destructor:tortuga.TaskReq)
  SharedDtor();
}

void TaskReq::SharedDtor() {
  if (this != internal_default_instance()) delete worker_;
}

void TaskReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskReq::descriptor() {
  ::protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TaskReq& TaskReq::default_instance() {
  ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsTaskReq();
  return *internal_default_instance();
}

TaskReq* TaskReq::New(::google::protobuf::Arena* arena) const {
  TaskReq* n = new TaskReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TaskReq::Clear() {
// @@protoc_insertion_point(message_clear_start:tortuga.TaskReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && worker_ != NULL) {
    delete worker_;
  }
  worker_ = NULL;
  _internal_metadata_.Clear();
}

bool TaskReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tortuga.TaskReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tortuga.Worker worker = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_worker()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tortuga.TaskReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tortuga.TaskReq)
  return false;
#undef DO_
}

void TaskReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tortuga.TaskReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tortuga.Worker worker = 1;
  if (this->has_worker()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->worker_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tortuga.TaskReq)
}

::google::protobuf::uint8* TaskReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tortuga.TaskReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tortuga.Worker worker = 1;
  if (this->has_worker()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->worker_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tortuga.TaskReq)
  return target;
}

size_t TaskReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tortuga.TaskReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tortuga.Worker worker = 1;
  if (this->has_worker()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->worker_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tortuga.TaskReq)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TaskReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tortuga.TaskReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tortuga.TaskReq)
    MergeFrom(*source);
  }
}

void TaskReq::MergeFrom(const TaskReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tortuga.TaskReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_worker()) {
    mutable_worker()->::tortuga::Worker::MergeFrom(from.worker());
  }
}

void TaskReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tortuga.TaskReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskReq::CopyFrom(const TaskReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tortuga.TaskReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskReq::IsInitialized() const {
  return true;
}

void TaskReq::Swap(TaskReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskReq::InternalSwap(TaskReq* other) {
  using std::swap;
  swap(worker_, other->worker_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TaskReq::GetMetadata() const {
  protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TaskResp_RetryContext::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskResp_RetryContext::kRetriesFieldNumber;
const int TaskResp_RetryContext::kProgressMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskResp_RetryContext::TaskResp_RetryContext()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsTaskResp_RetryContext();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tortuga.TaskResp.RetryContext)
}
TaskResp_RetryContext::TaskResp_RetryContext(const TaskResp_RetryContext& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  progress_metadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.progress_metadata().size() > 0) {
    progress_metadata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.progress_metadata_);
  }
  retries_ = from.retries_;
  // @@protoc_insertion_point(copy_constructor:tortuga.TaskResp.RetryContext)
}

void TaskResp_RetryContext::SharedCtor() {
  progress_metadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retries_ = 0;
  _cached_size_ = 0;
}

TaskResp_RetryContext::~TaskResp_RetryContext() {
  // @@protoc_insertion_point(destructor:tortuga.TaskResp.RetryContext)
  SharedDtor();
}

void TaskResp_RetryContext::SharedDtor() {
  progress_metadata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TaskResp_RetryContext::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskResp_RetryContext::descriptor() {
  ::protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TaskResp_RetryContext& TaskResp_RetryContext::default_instance() {
  ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsTaskResp_RetryContext();
  return *internal_default_instance();
}

TaskResp_RetryContext* TaskResp_RetryContext::New(::google::protobuf::Arena* arena) const {
  TaskResp_RetryContext* n = new TaskResp_RetryContext;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TaskResp_RetryContext::Clear() {
// @@protoc_insertion_point(message_clear_start:tortuga.TaskResp.RetryContext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  progress_metadata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retries_ = 0;
  _internal_metadata_.Clear();
}

bool TaskResp_RetryContext::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tortuga.TaskResp.RetryContext)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retries = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retries_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string progress_metadata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_progress_metadata()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->progress_metadata().data(), static_cast<int>(this->progress_metadata().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.TaskResp.RetryContext.progress_metadata"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tortuga.TaskResp.RetryContext)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tortuga.TaskResp.RetryContext)
  return false;
#undef DO_
}

void TaskResp_RetryContext::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tortuga.TaskResp.RetryContext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retries = 1;
  if (this->retries() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retries(), output);
  }

  // string progress_metadata = 2;
  if (this->progress_metadata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->progress_metadata().data(), static_cast<int>(this->progress_metadata().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.TaskResp.RetryContext.progress_metadata");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->progress_metadata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tortuga.TaskResp.RetryContext)
}

::google::protobuf::uint8* TaskResp_RetryContext::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tortuga.TaskResp.RetryContext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retries = 1;
  if (this->retries() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retries(), target);
  }

  // string progress_metadata = 2;
  if (this->progress_metadata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->progress_metadata().data(), static_cast<int>(this->progress_metadata().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.TaskResp.RetryContext.progress_metadata");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->progress_metadata(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tortuga.TaskResp.RetryContext)
  return target;
}

size_t TaskResp_RetryContext::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tortuga.TaskResp.RetryContext)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string progress_metadata = 2;
  if (this->progress_metadata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->progress_metadata());
  }

  // int32 retries = 1;
  if (this->retries() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retries());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskResp_RetryContext::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tortuga.TaskResp.RetryContext)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskResp_RetryContext* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TaskResp_RetryContext>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tortuga.TaskResp.RetryContext)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tortuga.TaskResp.RetryContext)
    MergeFrom(*source);
  }
}

void TaskResp_RetryContext::MergeFrom(const TaskResp_RetryContext& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tortuga.TaskResp.RetryContext)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.progress_metadata().size() > 0) {

    progress_metadata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.progress_metadata_);
  }
  if (from.retries() != 0) {
    set_retries(from.retries());
  }
}

void TaskResp_RetryContext::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tortuga.TaskResp.RetryContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskResp_RetryContext::CopyFrom(const TaskResp_RetryContext& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tortuga.TaskResp.RetryContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskResp_RetryContext::IsInitialized() const {
  return true;
}

void TaskResp_RetryContext::Swap(TaskResp_RetryContext* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskResp_RetryContext::InternalSwap(TaskResp_RetryContext* other) {
  using std::swap;
  progress_metadata_.Swap(&other->progress_metadata_);
  swap(retries_, other->retries_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TaskResp_RetryContext::GetMetadata() const {
  protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TaskResp::InitAsDefaultInstance() {
  ::tortuga::_TaskResp_default_instance_._instance.get_mutable()->data_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
  ::tortuga::_TaskResp_default_instance_._instance.get_mutable()->retry_ctx_ = const_cast< ::tortuga::TaskResp_RetryContext*>(
      ::tortuga::TaskResp_RetryContext::internal_default_instance());
}
void TaskResp::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskResp::kIdFieldNumber;
const int TaskResp::kTypeFieldNumber;
const int TaskResp::kDataFieldNumber;
const int TaskResp::kHandleFieldNumber;
const int TaskResp::kNoneFieldNumber;
const int TaskResp::kRetryCtxFieldNumber;
const int TaskResp::kPriorityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskResp::TaskResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsTaskResp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tortuga.TaskResp)
}
TaskResp::TaskResp(const TaskResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.handle().size() > 0) {
    handle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handle_);
  }
  if (from.has_data()) {
    data_ = new ::google::protobuf::Any(*from.data_);
  } else {
    data_ = NULL;
  }
  if (from.has_retry_ctx()) {
    retry_ctx_ = new ::tortuga::TaskResp_RetryContext(*from.retry_ctx_);
  } else {
    retry_ctx_ = NULL;
  }
  ::memcpy(&none_, &from.none_,
    static_cast<size_t>(reinterpret_cast<char*>(&priority_) -
    reinterpret_cast<char*>(&none_)) + sizeof(priority_));
  // @@protoc_insertion_point(copy_constructor:tortuga.TaskResp)
}

void TaskResp::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&priority_) -
      reinterpret_cast<char*>(&data_)) + sizeof(priority_));
  _cached_size_ = 0;
}

TaskResp::~TaskResp() {
  // @@protoc_insertion_point(destructor:tortuga.TaskResp)
  SharedDtor();
}

void TaskResp::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  handle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_;
  if (this != internal_default_instance()) delete retry_ctx_;
}

void TaskResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskResp::descriptor() {
  ::protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TaskResp& TaskResp::default_instance() {
  ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsTaskResp();
  return *internal_default_instance();
}

TaskResp* TaskResp::New(::google::protobuf::Arena* arena) const {
  TaskResp* n = new TaskResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TaskResp::Clear() {
// @@protoc_insertion_point(message_clear_start:tortuga.TaskResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  handle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  if (GetArenaNoVirtual() == NULL && retry_ctx_ != NULL) {
    delete retry_ctx_;
  }
  retry_ctx_ = NULL;
  ::memset(&none_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&priority_) -
      reinterpret_cast<char*>(&none_)) + sizeof(priority_));
  _internal_metadata_.Clear();
}

bool TaskResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tortuga.TaskResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.TaskResp.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.TaskResp.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string handle = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_handle()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->handle().data(), static_cast<int>(this->handle().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.TaskResp.handle"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool none = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &none_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tortuga.TaskResp.RetryContext retry_ctx = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_retry_ctx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 priority = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &priority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tortuga.TaskResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tortuga.TaskResp)
  return false;
#undef DO_
}

void TaskResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tortuga.TaskResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.TaskResp.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.TaskResp.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type(), output);
  }

  // .google.protobuf.Any data = 3;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->data_, output);
  }

  // string handle = 4;
  if (this->handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->handle().data(), static_cast<int>(this->handle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.TaskResp.handle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->handle(), output);
  }

  // bool none = 5;
  if (this->none() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->none(), output);
  }

  // .tortuga.TaskResp.RetryContext retry_ctx = 6;
  if (this->has_retry_ctx()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->retry_ctx_, output);
  }

  // int32 priority = 7;
  if (this->priority() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->priority(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tortuga.TaskResp)
}

::google::protobuf::uint8* TaskResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tortuga.TaskResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.TaskResp.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.TaskResp.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type(), target);
  }

  // .google.protobuf.Any data = 3;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->data_, deterministic, target);
  }

  // string handle = 4;
  if (this->handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->handle().data(), static_cast<int>(this->handle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.TaskResp.handle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->handle(), target);
  }

  // bool none = 5;
  if (this->none() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->none(), target);
  }

  // .tortuga.TaskResp.RetryContext retry_ctx = 6;
  if (this->has_retry_ctx()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->retry_ctx_, deterministic, target);
  }

  // int32 priority = 7;
  if (this->priority() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->priority(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tortuga.TaskResp)
  return target;
}

size_t TaskResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tortuga.TaskResp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string type = 2;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // string handle = 4;
  if (this->handle().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->handle());
  }

  // .google.protobuf.Any data = 3;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->data_);
  }

  // .tortuga.TaskResp.RetryContext retry_ctx = 6;
  if (this->has_retry_ctx()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->retry_ctx_);
  }

  // bool none = 5;
  if (this->none() != 0) {
    total_size += 1 + 1;
  }

  // int32 priority = 7;
  if (this->priority() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->priority());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tortuga.TaskResp)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TaskResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tortuga.TaskResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tortuga.TaskResp)
    MergeFrom(*source);
  }
}

void TaskResp::MergeFrom(const TaskResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tortuga.TaskResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.handle().size() > 0) {

    handle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handle_);
  }
  if (from.has_data()) {
    mutable_data()->::google::protobuf::Any::MergeFrom(from.data());
  }
  if (from.has_retry_ctx()) {
    mutable_retry_ctx()->::tortuga::TaskResp_RetryContext::MergeFrom(from.retry_ctx());
  }
  if (from.none() != 0) {
    set_none(from.none());
  }
  if (from.priority() != 0) {
    set_priority(from.priority());
  }
}

void TaskResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tortuga.TaskResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskResp::CopyFrom(const TaskResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tortuga.TaskResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskResp::IsInitialized() const {
  return true;
}

void TaskResp::Swap(TaskResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskResp::InternalSwap(TaskResp* other) {
  using std::swap;
  id_.Swap(&other->id_);
  type_.Swap(&other->type_);
  handle_.Swap(&other->handle_);
  swap(data_, other->data_);
  swap(retry_ctx_, other->retry_ctx_);
  swap(none_, other->none_);
  swap(priority_, other->priority_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TaskResp::GetMetadata() const {
  protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Task::InitAsDefaultInstance() {
  ::tortuga::_Task_default_instance_._instance.get_mutable()->data_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
  ::tortuga::_Task_default_instance_._instance.get_mutable()->priority_ = const_cast< ::google::protobuf::Int32Value*>(
      ::google::protobuf::Int32Value::internal_default_instance());
  ::tortuga::_Task_default_instance_._instance.get_mutable()->max_retries_ = const_cast< ::google::protobuf::Int32Value*>(
      ::google::protobuf::Int32Value::internal_default_instance());
  ::tortuga::_Task_default_instance_._instance.get_mutable()->delay_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}
void Task::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
}
void Task::clear_priority() {
  if (GetArenaNoVirtual() == NULL && priority_ != NULL) {
    delete priority_;
  }
  priority_ = NULL;
}
void Task::clear_max_retries() {
  if (GetArenaNoVirtual() == NULL && max_retries_ != NULL) {
    delete max_retries_;
  }
  max_retries_ = NULL;
}
void Task::clear_delay() {
  if (GetArenaNoVirtual() == NULL && delay_ != NULL) {
    delete delay_;
  }
  delay_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Task::kIdFieldNumber;
const int Task::kTypeFieldNumber;
const int Task::kDataFieldNumber;
const int Task::kPriorityFieldNumber;
const int Task::kMaxRetriesFieldNumber;
const int Task::kDelayFieldNumber;
const int Task::kModulesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Task::Task()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsTask();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tortuga.Task)
}
Task::Task(const Task& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      modules_(from.modules_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.has_data()) {
    data_ = new ::google::protobuf::Any(*from.data_);
  } else {
    data_ = NULL;
  }
  if (from.has_priority()) {
    priority_ = new ::google::protobuf::Int32Value(*from.priority_);
  } else {
    priority_ = NULL;
  }
  if (from.has_max_retries()) {
    max_retries_ = new ::google::protobuf::Int32Value(*from.max_retries_);
  } else {
    max_retries_ = NULL;
  }
  if (from.has_delay()) {
    delay_ = new ::google::protobuf::Duration(*from.delay_);
  } else {
    delay_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tortuga.Task)
}

void Task::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&delay_) -
      reinterpret_cast<char*>(&data_)) + sizeof(delay_));
  _cached_size_ = 0;
}

Task::~Task() {
  // @@protoc_insertion_point(destructor:tortuga.Task)
  SharedDtor();
}

void Task::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_;
  if (this != internal_default_instance()) delete priority_;
  if (this != internal_default_instance()) delete max_retries_;
  if (this != internal_default_instance()) delete delay_;
}

void Task::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Task::descriptor() {
  ::protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Task& Task::default_instance() {
  ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsTask();
  return *internal_default_instance();
}

Task* Task::New(::google::protobuf::Arena* arena) const {
  Task* n = new Task;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Task::Clear() {
// @@protoc_insertion_point(message_clear_start:tortuga.Task)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  modules_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  if (GetArenaNoVirtual() == NULL && priority_ != NULL) {
    delete priority_;
  }
  priority_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_retries_ != NULL) {
    delete max_retries_;
  }
  max_retries_ = NULL;
  if (GetArenaNoVirtual() == NULL && delay_ != NULL) {
    delete delay_;
  }
  delay_ = NULL;
  _internal_metadata_.Clear();
}

bool Task::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tortuga.Task)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.Task.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.Task.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int32Value priority = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_priority()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int32Value max_retries = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max_retries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration delay = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_delay()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string modules = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_modules()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->modules(this->modules_size() - 1).data(),
            static_cast<int>(this->modules(this->modules_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.Task.modules"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tortuga.Task)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tortuga.Task)
  return false;
#undef DO_
}

void Task::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tortuga.Task)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.Task.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.Task.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type(), output);
  }

  // .google.protobuf.Any data = 3;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->data_, output);
  }

  // .google.protobuf.Int32Value priority = 4;
  if (this->has_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->priority_, output);
  }

  // .google.protobuf.Int32Value max_retries = 5;
  if (this->has_max_retries()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->max_retries_, output);
  }

  // .google.protobuf.Duration delay = 6;
  if (this->has_delay()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->delay_, output);
  }

  // repeated string modules = 7;
  for (int i = 0, n = this->modules_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->modules(i).data(), static_cast<int>(this->modules(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.Task.modules");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->modules(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tortuga.Task)
}

::google::protobuf::uint8* Task::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tortuga.Task)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.Task.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.Task.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type(), target);
  }

  // .google.protobuf.Any data = 3;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->data_, deterministic, target);
  }

  // .google.protobuf.Int32Value priority = 4;
  if (this->has_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->priority_, deterministic, target);
  }

  // .google.protobuf.Int32Value max_retries = 5;
  if (this->has_max_retries()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->max_retries_, deterministic, target);
  }

  // .google.protobuf.Duration delay = 6;
  if (this->has_delay()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->delay_, deterministic, target);
  }

  // repeated string modules = 7;
  for (int i = 0, n = this->modules_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->modules(i).data(), static_cast<int>(this->modules(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.Task.modules");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->modules(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tortuga.Task)
  return target;
}

size_t Task::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tortuga.Task)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string modules = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->modules_size());
  for (int i = 0, n = this->modules_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->modules(i));
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string type = 2;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // .google.protobuf.Any data = 3;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->data_);
  }

  // .google.protobuf.Int32Value priority = 4;
  if (this->has_priority()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->priority_);
  }

  // .google.protobuf.Int32Value max_retries = 5;
  if (this->has_max_retries()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_retries_);
  }

  // .google.protobuf.Duration delay = 6;
  if (this->has_delay()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->delay_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Task::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tortuga.Task)
  GOOGLE_DCHECK_NE(&from, this);
  const Task* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Task>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tortuga.Task)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tortuga.Task)
    MergeFrom(*source);
  }
}

void Task::MergeFrom(const Task& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tortuga.Task)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  modules_.MergeFrom(from.modules_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.has_data()) {
    mutable_data()->::google::protobuf::Any::MergeFrom(from.data());
  }
  if (from.has_priority()) {
    mutable_priority()->::google::protobuf::Int32Value::MergeFrom(from.priority());
  }
  if (from.has_max_retries()) {
    mutable_max_retries()->::google::protobuf::Int32Value::MergeFrom(from.max_retries());
  }
  if (from.has_delay()) {
    mutable_delay()->::google::protobuf::Duration::MergeFrom(from.delay());
  }
}

void Task::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tortuga.Task)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Task::CopyFrom(const Task& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tortuga.Task)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Task::IsInitialized() const {
  return true;
}

void Task::Swap(Task* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Task::InternalSwap(Task* other) {
  using std::swap;
  modules_.InternalSwap(&other->modules_);
  id_.Swap(&other->id_);
  type_.Swap(&other->type_);
  swap(data_, other->data_);
  swap(priority_, other->priority_);
  swap(max_retries_, other->max_retries_);
  swap(delay_, other->delay_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Task::GetMetadata() const {
  protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TaskProgress::InitAsDefaultInstance() {
  ::tortuga::_TaskProgress_default_instance_._instance.get_mutable()->created_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::tortuga::_TaskProgress_default_instance_._instance.get_mutable()->started_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::tortuga::_TaskProgress_default_instance_._instance.get_mutable()->done_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::tortuga::_TaskProgress_default_instance_._instance.get_mutable()->status_ = const_cast< ::google::rpc::Status*>(
      ::google::rpc::Status::internal_default_instance());
}
void TaskProgress::clear_created() {
  if (GetArenaNoVirtual() == NULL && created_ != NULL) {
    delete created_;
  }
  created_ = NULL;
}
void TaskProgress::clear_started_time() {
  if (GetArenaNoVirtual() == NULL && started_time_ != NULL) {
    delete started_time_;
  }
  started_time_ = NULL;
}
void TaskProgress::clear_done_time() {
  if (GetArenaNoVirtual() == NULL && done_time_ != NULL) {
    delete done_time_;
  }
  done_time_ = NULL;
}
void TaskProgress::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskProgress::kHandleFieldNumber;
const int TaskProgress::kIdFieldNumber;
const int TaskProgress::kTypeFieldNumber;
const int TaskProgress::kMaxRetriesFieldNumber;
const int TaskProgress::kRetriesFieldNumber;
const int TaskProgress::kPriorityFieldNumber;
const int TaskProgress::kWorkedOnFieldNumber;
const int TaskProgress::kDoneFieldNumber;
const int TaskProgress::kCreatedFieldNumber;
const int TaskProgress::kStartedTimeFieldNumber;
const int TaskProgress::kDoneTimeFieldNumber;
const int TaskProgress::kStatusFieldNumber;
const int TaskProgress::kProgressFieldNumber;
const int TaskProgress::kProgressMessageFieldNumber;
const int TaskProgress::kProgressMetadataFieldNumber;
const int TaskProgress::kLogsFieldNumber;
const int TaskProgress::kWorkerIdFieldNumber;
const int TaskProgress::kOutputFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskProgress::TaskProgress()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsTaskProgress();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tortuga.TaskProgress)
}
TaskProgress::TaskProgress(const TaskProgress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.handle().size() > 0) {
    handle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handle_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  progress_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.progress_message().size() > 0) {
    progress_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.progress_message_);
  }
  logs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.logs().size() > 0) {
    logs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logs_);
  }
  worker_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.worker_id().size() > 0) {
    worker_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worker_id_);
  }
  output_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.output().size() > 0) {
    output_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_);
  }
  progress_metadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.progress_metadata().size() > 0) {
    progress_metadata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.progress_metadata_);
  }
  if (from.has_created()) {
    created_ = new ::google::protobuf::Timestamp(*from.created_);
  } else {
    created_ = NULL;
  }
  if (from.has_started_time()) {
    started_time_ = new ::google::protobuf::Timestamp(*from.started_time_);
  } else {
    started_time_ = NULL;
  }
  if (from.has_done_time()) {
    done_time_ = new ::google::protobuf::Timestamp(*from.done_time_);
  } else {
    done_time_ = NULL;
  }
  if (from.has_status()) {
    status_ = new ::google::rpc::Status(*from.status_);
  } else {
    status_ = NULL;
  }
  ::memcpy(&max_retries_, &from.max_retries_,
    static_cast<size_t>(reinterpret_cast<char*>(&progress_) -
    reinterpret_cast<char*>(&max_retries_)) + sizeof(progress_));
  // @@protoc_insertion_point(copy_constructor:tortuga.TaskProgress)
}

void TaskProgress::SharedCtor() {
  handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  progress_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  progress_metadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&created_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&progress_) -
      reinterpret_cast<char*>(&created_)) + sizeof(progress_));
  _cached_size_ = 0;
}

TaskProgress::~TaskProgress() {
  // @@protoc_insertion_point(destructor:tortuga.TaskProgress)
  SharedDtor();
}

void TaskProgress::SharedDtor() {
  handle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  progress_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logs_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  progress_metadata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete created_;
  if (this != internal_default_instance()) delete started_time_;
  if (this != internal_default_instance()) delete done_time_;
  if (this != internal_default_instance()) delete status_;
}

void TaskProgress::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskProgress::descriptor() {
  ::protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TaskProgress& TaskProgress::default_instance() {
  ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsTaskProgress();
  return *internal_default_instance();
}

TaskProgress* TaskProgress::New(::google::protobuf::Arena* arena) const {
  TaskProgress* n = new TaskProgress;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TaskProgress::Clear() {
// @@protoc_insertion_point(message_clear_start:tortuga.TaskProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  handle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  progress_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logs_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  progress_metadata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && created_ != NULL) {
    delete created_;
  }
  created_ = NULL;
  if (GetArenaNoVirtual() == NULL && started_time_ != NULL) {
    delete started_time_;
  }
  started_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && done_time_ != NULL) {
    delete done_time_;
  }
  done_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  ::memset(&max_retries_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&progress_) -
      reinterpret_cast<char*>(&max_retries_)) + sizeof(progress_));
  _internal_metadata_.Clear();
}

bool TaskProgress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tortuga.TaskProgress)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_handle()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->handle().data(), static_cast<int>(this->handle().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.TaskProgress.handle"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.TaskProgress.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.TaskProgress.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 max_retries = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_retries_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retries = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retries_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 priority = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &priority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool worked_on = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &worked_on_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool done = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &done_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp created = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_created()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp started_time = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_started_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp done_time = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_done_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.rpc.Status status = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float progress = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(109u /* 109 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string progress_message = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_progress_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->progress_message().data(), static_cast<int>(this->progress_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.TaskProgress.progress_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string logs = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_logs()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->logs().data(), static_cast<int>(this->logs().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.TaskProgress.logs"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string worker_id = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_worker_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->worker_id().data(), static_cast<int>(this->worker_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.TaskProgress.worker_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string output = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_output()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->output().data(), static_cast<int>(this->output().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.TaskProgress.output"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string progress_metadata = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_progress_metadata()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->progress_metadata().data(), static_cast<int>(this->progress_metadata().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.TaskProgress.progress_metadata"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tortuga.TaskProgress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tortuga.TaskProgress)
  return false;
#undef DO_
}

void TaskProgress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tortuga.TaskProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string handle = 1;
  if (this->handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->handle().data(), static_cast<int>(this->handle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.TaskProgress.handle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->handle(), output);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.TaskProgress.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.TaskProgress.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->type(), output);
  }

  // int32 max_retries = 4;
  if (this->max_retries() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->max_retries(), output);
  }

  // int32 retries = 5;
  if (this->retries() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->retries(), output);
  }

  // int32 priority = 6;
  if (this->priority() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->priority(), output);
  }

  // bool worked_on = 7;
  if (this->worked_on() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->worked_on(), output);
  }

  // bool done = 8;
  if (this->done() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->done(), output);
  }

  // .google.protobuf.Timestamp created = 9;
  if (this->has_created()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->created_, output);
  }

  // .google.protobuf.Timestamp started_time = 10;
  if (this->has_started_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->started_time_, output);
  }

  // .google.protobuf.Timestamp done_time = 11;
  if (this->has_done_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->done_time_, output);
  }

  // .google.rpc.Status status = 12;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->status_, output);
  }

  // float progress = 13;
  if (this->progress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(13, this->progress(), output);
  }

  // string progress_message = 14;
  if (this->progress_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->progress_message().data(), static_cast<int>(this->progress_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.TaskProgress.progress_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->progress_message(), output);
  }

  // string logs = 15;
  if (this->logs().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logs().data(), static_cast<int>(this->logs().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.TaskProgress.logs");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->logs(), output);
  }

  // string worker_id = 16;
  if (this->worker_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->worker_id().data(), static_cast<int>(this->worker_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.TaskProgress.worker_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->worker_id(), output);
  }

  // string output = 17;
  if (this->output().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->output().data(), static_cast<int>(this->output().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.TaskProgress.output");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->output(), output);
  }

  // string progress_metadata = 18;
  if (this->progress_metadata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->progress_metadata().data(), static_cast<int>(this->progress_metadata().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.TaskProgress.progress_metadata");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->progress_metadata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tortuga.TaskProgress)
}

::google::protobuf::uint8* TaskProgress::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tortuga.TaskProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string handle = 1;
  if (this->handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->handle().data(), static_cast<int>(this->handle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.TaskProgress.handle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->handle(), target);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.TaskProgress.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.TaskProgress.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->type(), target);
  }

  // int32 max_retries = 4;
  if (this->max_retries() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->max_retries(), target);
  }

  // int32 retries = 5;
  if (this->retries() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->retries(), target);
  }

  // int32 priority = 6;
  if (this->priority() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->priority(), target);
  }

  // bool worked_on = 7;
  if (this->worked_on() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->worked_on(), target);
  }

  // bool done = 8;
  if (this->done() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->done(), target);
  }

  // .google.protobuf.Timestamp created = 9;
  if (this->has_created()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, *this->created_, deterministic, target);
  }

  // .google.protobuf.Timestamp started_time = 10;
  if (this->has_started_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, *this->started_time_, deterministic, target);
  }

  // .google.protobuf.Timestamp done_time = 11;
  if (this->has_done_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, *this->done_time_, deterministic, target);
  }

  // .google.rpc.Status status = 12;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, *this->status_, deterministic, target);
  }

  // float progress = 13;
  if (this->progress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(13, this->progress(), target);
  }

  // string progress_message = 14;
  if (this->progress_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->progress_message().data(), static_cast<int>(this->progress_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.TaskProgress.progress_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->progress_message(), target);
  }

  // string logs = 15;
  if (this->logs().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logs().data(), static_cast<int>(this->logs().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.TaskProgress.logs");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->logs(), target);
  }

  // string worker_id = 16;
  if (this->worker_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->worker_id().data(), static_cast<int>(this->worker_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.TaskProgress.worker_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->worker_id(), target);
  }

  // string output = 17;
  if (this->output().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->output().data(), static_cast<int>(this->output().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.TaskProgress.output");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->output(), target);
  }

  // string progress_metadata = 18;
  if (this->progress_metadata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->progress_metadata().data(), static_cast<int>(this->progress_metadata().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.TaskProgress.progress_metadata");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->progress_metadata(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tortuga.TaskProgress)
  return target;
}

size_t TaskProgress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tortuga.TaskProgress)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string handle = 1;
  if (this->handle().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->handle());
  }

  // string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string type = 3;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // string progress_message = 14;
  if (this->progress_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->progress_message());
  }

  // string logs = 15;
  if (this->logs().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->logs());
  }

  // string worker_id = 16;
  if (this->worker_id().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->worker_id());
  }

  // string output = 17;
  if (this->output().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->output());
  }

  // string progress_metadata = 18;
  if (this->progress_metadata().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->progress_metadata());
  }

  // .google.protobuf.Timestamp created = 9;
  if (this->has_created()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->created_);
  }

  // .google.protobuf.Timestamp started_time = 10;
  if (this->has_started_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->started_time_);
  }

  // .google.protobuf.Timestamp done_time = 11;
  if (this->has_done_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->done_time_);
  }

  // .google.rpc.Status status = 12;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->status_);
  }

  // int32 max_retries = 4;
  if (this->max_retries() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_retries());
  }

  // int32 retries = 5;
  if (this->retries() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retries());
  }

  // int32 priority = 6;
  if (this->priority() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->priority());
  }

  // bool worked_on = 7;
  if (this->worked_on() != 0) {
    total_size += 1 + 1;
  }

  // bool done = 8;
  if (this->done() != 0) {
    total_size += 1 + 1;
  }

  // float progress = 13;
  if (this->progress() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskProgress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tortuga.TaskProgress)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskProgress* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TaskProgress>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tortuga.TaskProgress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tortuga.TaskProgress)
    MergeFrom(*source);
  }
}

void TaskProgress::MergeFrom(const TaskProgress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tortuga.TaskProgress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.handle().size() > 0) {

    handle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handle_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.progress_message().size() > 0) {

    progress_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.progress_message_);
  }
  if (from.logs().size() > 0) {

    logs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logs_);
  }
  if (from.worker_id().size() > 0) {

    worker_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worker_id_);
  }
  if (from.output().size() > 0) {

    output_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_);
  }
  if (from.progress_metadata().size() > 0) {

    progress_metadata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.progress_metadata_);
  }
  if (from.has_created()) {
    mutable_created()->::google::protobuf::Timestamp::MergeFrom(from.created());
  }
  if (from.has_started_time()) {
    mutable_started_time()->::google::protobuf::Timestamp::MergeFrom(from.started_time());
  }
  if (from.has_done_time()) {
    mutable_done_time()->::google::protobuf::Timestamp::MergeFrom(from.done_time());
  }
  if (from.has_status()) {
    mutable_status()->::google::rpc::Status::MergeFrom(from.status());
  }
  if (from.max_retries() != 0) {
    set_max_retries(from.max_retries());
  }
  if (from.retries() != 0) {
    set_retries(from.retries());
  }
  if (from.priority() != 0) {
    set_priority(from.priority());
  }
  if (from.worked_on() != 0) {
    set_worked_on(from.worked_on());
  }
  if (from.done() != 0) {
    set_done(from.done());
  }
  if (from.progress() != 0) {
    set_progress(from.progress());
  }
}

void TaskProgress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tortuga.TaskProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskProgress::CopyFrom(const TaskProgress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tortuga.TaskProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskProgress::IsInitialized() const {
  return true;
}

void TaskProgress::Swap(TaskProgress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskProgress::InternalSwap(TaskProgress* other) {
  using std::swap;
  handle_.Swap(&other->handle_);
  id_.Swap(&other->id_);
  type_.Swap(&other->type_);
  progress_message_.Swap(&other->progress_message_);
  logs_.Swap(&other->logs_);
  worker_id_.Swap(&other->worker_id_);
  output_.Swap(&other->output_);
  progress_metadata_.Swap(&other->progress_metadata_);
  swap(created_, other->created_);
  swap(started_time_, other->started_time_);
  swap(done_time_, other->done_time_);
  swap(status_, other->status_);
  swap(max_retries_, other->max_retries_);
  swap(retries_, other->retries_);
  swap(priority_, other->priority_);
  swap(worked_on_, other->worked_on_);
  swap(done_, other->done_);
  swap(progress_, other->progress_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TaskProgress::GetMetadata() const {
  protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateReq::InitAsDefaultInstance() {
  ::tortuga::_CreateReq_default_instance_._instance.get_mutable()->task_ = const_cast< ::tortuga::Task*>(
      ::tortuga::Task::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateReq::kTaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateReq::CreateReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsCreateReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tortuga.CreateReq)
}
CreateReq::CreateReq(const CreateReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_task()) {
    task_ = new ::tortuga::Task(*from.task_);
  } else {
    task_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tortuga.CreateReq)
}

void CreateReq::SharedCtor() {
  task_ = NULL;
  _cached_size_ = 0;
}

CreateReq::~CreateReq() {
  // @@protoc_insertion_point(destructor:tortuga.CreateReq)
  SharedDtor();
}

void CreateReq::SharedDtor() {
  if (this != internal_default_instance()) delete task_;
}

void CreateReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateReq::descriptor() {
  ::protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateReq& CreateReq::default_instance() {
  ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsCreateReq();
  return *internal_default_instance();
}

CreateReq* CreateReq::New(::google::protobuf::Arena* arena) const {
  CreateReq* n = new CreateReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:tortuga.CreateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && task_ != NULL) {
    delete task_;
  }
  task_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tortuga.CreateReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tortuga.Task task = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_task()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tortuga.CreateReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tortuga.CreateReq)
  return false;
#undef DO_
}

void CreateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tortuga.CreateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tortuga.Task task = 1;
  if (this->has_task()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->task_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tortuga.CreateReq)
}

::google::protobuf::uint8* CreateReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tortuga.CreateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tortuga.Task task = 1;
  if (this->has_task()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->task_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tortuga.CreateReq)
  return target;
}

size_t CreateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tortuga.CreateReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tortuga.Task task = 1;
  if (this->has_task()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->task_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tortuga.CreateReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tortuga.CreateReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tortuga.CreateReq)
    MergeFrom(*source);
  }
}

void CreateReq::MergeFrom(const CreateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tortuga.CreateReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_task()) {
    mutable_task()->::tortuga::Task::MergeFrom(from.task());
  }
}

void CreateReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tortuga.CreateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateReq::CopyFrom(const CreateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tortuga.CreateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateReq::IsInitialized() const {
  return true;
}

void CreateReq::Swap(CreateReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateReq::InternalSwap(CreateReq* other) {
  using std::swap;
  swap(task_, other->task_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateReq::GetMetadata() const {
  protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateResp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateResp::kHandleFieldNumber;
const int CreateResp::kCreatedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateResp::CreateResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsCreateResp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tortuga.CreateResp)
}
CreateResp::CreateResp(const CreateResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.handle().size() > 0) {
    handle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handle_);
  }
  created_ = from.created_;
  // @@protoc_insertion_point(copy_constructor:tortuga.CreateResp)
}

void CreateResp::SharedCtor() {
  handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  created_ = false;
  _cached_size_ = 0;
}

CreateResp::~CreateResp() {
  // @@protoc_insertion_point(destructor:tortuga.CreateResp)
  SharedDtor();
}

void CreateResp::SharedDtor() {
  handle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateResp::descriptor() {
  ::protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateResp& CreateResp::default_instance() {
  ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsCreateResp();
  return *internal_default_instance();
}

CreateResp* CreateResp::New(::google::protobuf::Arena* arena) const {
  CreateResp* n = new CreateResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateResp::Clear() {
// @@protoc_insertion_point(message_clear_start:tortuga.CreateResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  handle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  created_ = false;
  _internal_metadata_.Clear();
}

bool CreateResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tortuga.CreateResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_handle()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->handle().data(), static_cast<int>(this->handle().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.CreateResp.handle"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool created = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &created_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tortuga.CreateResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tortuga.CreateResp)
  return false;
#undef DO_
}

void CreateResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tortuga.CreateResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string handle = 1;
  if (this->handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->handle().data(), static_cast<int>(this->handle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.CreateResp.handle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->handle(), output);
  }

  // bool created = 2;
  if (this->created() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->created(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tortuga.CreateResp)
}

::google::protobuf::uint8* CreateResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tortuga.CreateResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string handle = 1;
  if (this->handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->handle().data(), static_cast<int>(this->handle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.CreateResp.handle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->handle(), target);
  }

  // bool created = 2;
  if (this->created() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->created(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tortuga.CreateResp)
  return target;
}

size_t CreateResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tortuga.CreateResp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string handle = 1;
  if (this->handle().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->handle());
  }

  // bool created = 2;
  if (this->created() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tortuga.CreateResp)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tortuga.CreateResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tortuga.CreateResp)
    MergeFrom(*source);
  }
}

void CreateResp::MergeFrom(const CreateResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tortuga.CreateResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.handle().size() > 0) {

    handle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handle_);
  }
  if (from.created() != 0) {
    set_created(from.created());
  }
}

void CreateResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tortuga.CreateResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateResp::CopyFrom(const CreateResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tortuga.CreateResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateResp::IsInitialized() const {
  return true;
}

void CreateResp::Swap(CreateResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateResp::InternalSwap(CreateResp* other) {
  using std::swap;
  handle_.Swap(&other->handle_);
  swap(created_, other->created_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateResp::GetMetadata() const {
  protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CompleteTaskReq::InitAsDefaultInstance() {
  ::tortuga::_CompleteTaskReq_default_instance_._instance.get_mutable()->worker_ = const_cast< ::tortuga::Worker*>(
      ::tortuga::Worker::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CompleteTaskReq::kWorkerFieldNumber;
const int CompleteTaskReq::kHandleFieldNumber;
const int CompleteTaskReq::kCodeFieldNumber;
const int CompleteTaskReq::kErrorMessageFieldNumber;
const int CompleteTaskReq::kLogsFieldNumber;
const int CompleteTaskReq::kOutputFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompleteTaskReq::CompleteTaskReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsCompleteTaskReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tortuga.CompleteTaskReq)
}
CompleteTaskReq::CompleteTaskReq(const CompleteTaskReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.handle().size() > 0) {
    handle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handle_);
  }
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_message().size() > 0) {
    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  logs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.logs().size() > 0) {
    logs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logs_);
  }
  output_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.output().size() > 0) {
    output_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_);
  }
  if (from.has_worker()) {
    worker_ = new ::tortuga::Worker(*from.worker_);
  } else {
    worker_ = NULL;
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:tortuga.CompleteTaskReq)
}

void CompleteTaskReq::SharedCtor() {
  handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&worker_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&worker_)) + sizeof(code_));
  _cached_size_ = 0;
}

CompleteTaskReq::~CompleteTaskReq() {
  // @@protoc_insertion_point(destructor:tortuga.CompleteTaskReq)
  SharedDtor();
}

void CompleteTaskReq::SharedDtor() {
  handle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logs_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete worker_;
}

void CompleteTaskReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CompleteTaskReq::descriptor() {
  ::protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CompleteTaskReq& CompleteTaskReq::default_instance() {
  ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsCompleteTaskReq();
  return *internal_default_instance();
}

CompleteTaskReq* CompleteTaskReq::New(::google::protobuf::Arena* arena) const {
  CompleteTaskReq* n = new CompleteTaskReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CompleteTaskReq::Clear() {
// @@protoc_insertion_point(message_clear_start:tortuga.CompleteTaskReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  handle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logs_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && worker_ != NULL) {
    delete worker_;
  }
  worker_ = NULL;
  code_ = 0;
  _internal_metadata_.Clear();
}

bool CompleteTaskReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tortuga.CompleteTaskReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tortuga.Worker worker = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_worker()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string handle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_handle()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->handle().data(), static_cast<int>(this->handle().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.CompleteTaskReq.handle"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error_message = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_message().data(), static_cast<int>(this->error_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.CompleteTaskReq.error_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string logs = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_logs()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->logs().data(), static_cast<int>(this->logs().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.CompleteTaskReq.logs"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string output = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_output()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->output().data(), static_cast<int>(this->output().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.CompleteTaskReq.output"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tortuga.CompleteTaskReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tortuga.CompleteTaskReq)
  return false;
#undef DO_
}

void CompleteTaskReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tortuga.CompleteTaskReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tortuga.Worker worker = 1;
  if (this->has_worker()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->worker_, output);
  }

  // string handle = 2;
  if (this->handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->handle().data(), static_cast<int>(this->handle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.CompleteTaskReq.handle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->handle(), output);
  }

  // int32 code = 3;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->code(), output);
  }

  // string error_message = 4;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.CompleteTaskReq.error_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->error_message(), output);
  }

  // string logs = 5;
  if (this->logs().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logs().data(), static_cast<int>(this->logs().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.CompleteTaskReq.logs");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->logs(), output);
  }

  // string output = 6;
  if (this->output().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->output().data(), static_cast<int>(this->output().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.CompleteTaskReq.output");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->output(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tortuga.CompleteTaskReq)
}

::google::protobuf::uint8* CompleteTaskReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tortuga.CompleteTaskReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tortuga.Worker worker = 1;
  if (this->has_worker()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->worker_, deterministic, target);
  }

  // string handle = 2;
  if (this->handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->handle().data(), static_cast<int>(this->handle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.CompleteTaskReq.handle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->handle(), target);
  }

  // int32 code = 3;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->code(), target);
  }

  // string error_message = 4;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.CompleteTaskReq.error_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->error_message(), target);
  }

  // string logs = 5;
  if (this->logs().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logs().data(), static_cast<int>(this->logs().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.CompleteTaskReq.logs");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->logs(), target);
  }

  // string output = 6;
  if (this->output().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->output().data(), static_cast<int>(this->output().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.CompleteTaskReq.output");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->output(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tortuga.CompleteTaskReq)
  return target;
}

size_t CompleteTaskReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tortuga.CompleteTaskReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string handle = 2;
  if (this->handle().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->handle());
  }

  // string error_message = 4;
  if (this->error_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_message());
  }

  // string logs = 5;
  if (this->logs().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->logs());
  }

  // string output = 6;
  if (this->output().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->output());
  }

  // .tortuga.Worker worker = 1;
  if (this->has_worker()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->worker_);
  }

  // int32 code = 3;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CompleteTaskReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tortuga.CompleteTaskReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CompleteTaskReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CompleteTaskReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tortuga.CompleteTaskReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tortuga.CompleteTaskReq)
    MergeFrom(*source);
  }
}

void CompleteTaskReq::MergeFrom(const CompleteTaskReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tortuga.CompleteTaskReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.handle().size() > 0) {

    handle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handle_);
  }
  if (from.error_message().size() > 0) {

    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  if (from.logs().size() > 0) {

    logs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logs_);
  }
  if (from.output().size() > 0) {

    output_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_);
  }
  if (from.has_worker()) {
    mutable_worker()->::tortuga::Worker::MergeFrom(from.worker());
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void CompleteTaskReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tortuga.CompleteTaskReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompleteTaskReq::CopyFrom(const CompleteTaskReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tortuga.CompleteTaskReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompleteTaskReq::IsInitialized() const {
  return true;
}

void CompleteTaskReq::Swap(CompleteTaskReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CompleteTaskReq::InternalSwap(CompleteTaskReq* other) {
  using std::swap;
  handle_.Swap(&other->handle_);
  error_message_.Swap(&other->error_message_);
  logs_.Swap(&other->logs_);
  output_.Swap(&other->output_);
  swap(worker_, other->worker_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CompleteTaskReq::GetMetadata() const {
  protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateProgressReq::InitAsDefaultInstance() {
  ::tortuga::_UpdateProgressReq_default_instance_._instance.get_mutable()->worker_ = const_cast< ::tortuga::Worker*>(
      ::tortuga::Worker::internal_default_instance());
  ::tortuga::_UpdateProgressReq_default_instance_._instance.get_mutable()->progress_ = const_cast< ::google::protobuf::FloatValue*>(
      ::google::protobuf::FloatValue::internal_default_instance());
  ::tortuga::_UpdateProgressReq_default_instance_._instance.get_mutable()->progress_message_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
  ::tortuga::_UpdateProgressReq_default_instance_._instance.get_mutable()->progress_metadata_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
}
void UpdateProgressReq::clear_progress() {
  if (GetArenaNoVirtual() == NULL && progress_ != NULL) {
    delete progress_;
  }
  progress_ = NULL;
}
void UpdateProgressReq::clear_progress_message() {
  if (GetArenaNoVirtual() == NULL && progress_message_ != NULL) {
    delete progress_message_;
  }
  progress_message_ = NULL;
}
void UpdateProgressReq::clear_progress_metadata() {
  if (GetArenaNoVirtual() == NULL && progress_metadata_ != NULL) {
    delete progress_metadata_;
  }
  progress_metadata_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateProgressReq::kWorkerFieldNumber;
const int UpdateProgressReq::kHandleFieldNumber;
const int UpdateProgressReq::kProgressFieldNumber;
const int UpdateProgressReq::kProgressMessageFieldNumber;
const int UpdateProgressReq::kProgressMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateProgressReq::UpdateProgressReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsUpdateProgressReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tortuga.UpdateProgressReq)
}
UpdateProgressReq::UpdateProgressReq(const UpdateProgressReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.handle().size() > 0) {
    handle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handle_);
  }
  if (from.has_worker()) {
    worker_ = new ::tortuga::Worker(*from.worker_);
  } else {
    worker_ = NULL;
  }
  if (from.has_progress()) {
    progress_ = new ::google::protobuf::FloatValue(*from.progress_);
  } else {
    progress_ = NULL;
  }
  if (from.has_progress_message()) {
    progress_message_ = new ::google::protobuf::StringValue(*from.progress_message_);
  } else {
    progress_message_ = NULL;
  }
  if (from.has_progress_metadata()) {
    progress_metadata_ = new ::google::protobuf::StringValue(*from.progress_metadata_);
  } else {
    progress_metadata_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tortuga.UpdateProgressReq)
}

void UpdateProgressReq::SharedCtor() {
  handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&worker_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&progress_metadata_) -
      reinterpret_cast<char*>(&worker_)) + sizeof(progress_metadata_));
  _cached_size_ = 0;
}

UpdateProgressReq::~UpdateProgressReq() {
  // @@protoc_insertion_point(destructor:tortuga.UpdateProgressReq)
  SharedDtor();
}

void UpdateProgressReq::SharedDtor() {
  handle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete worker_;
  if (this != internal_default_instance()) delete progress_;
  if (this != internal_default_instance()) delete progress_message_;
  if (this != internal_default_instance()) delete progress_metadata_;
}

void UpdateProgressReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateProgressReq::descriptor() {
  ::protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateProgressReq& UpdateProgressReq::default_instance() {
  ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsUpdateProgressReq();
  return *internal_default_instance();
}

UpdateProgressReq* UpdateProgressReq::New(::google::protobuf::Arena* arena) const {
  UpdateProgressReq* n = new UpdateProgressReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateProgressReq::Clear() {
// @@protoc_insertion_point(message_clear_start:tortuga.UpdateProgressReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  handle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && worker_ != NULL) {
    delete worker_;
  }
  worker_ = NULL;
  if (GetArenaNoVirtual() == NULL && progress_ != NULL) {
    delete progress_;
  }
  progress_ = NULL;
  if (GetArenaNoVirtual() == NULL && progress_message_ != NULL) {
    delete progress_message_;
  }
  progress_message_ = NULL;
  if (GetArenaNoVirtual() == NULL && progress_metadata_ != NULL) {
    delete progress_metadata_;
  }
  progress_metadata_ = NULL;
  _internal_metadata_.Clear();
}

bool UpdateProgressReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tortuga.UpdateProgressReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tortuga.Worker worker = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_worker()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string handle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_handle()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->handle().data(), static_cast<int>(this->handle().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.UpdateProgressReq.handle"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FloatValue progress = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_progress()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.StringValue progress_message = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_progress_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.StringValue progress_metadata = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_progress_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tortuga.UpdateProgressReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tortuga.UpdateProgressReq)
  return false;
#undef DO_
}

void UpdateProgressReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tortuga.UpdateProgressReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tortuga.Worker worker = 1;
  if (this->has_worker()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->worker_, output);
  }

  // string handle = 2;
  if (this->handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->handle().data(), static_cast<int>(this->handle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.UpdateProgressReq.handle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->handle(), output);
  }

  // .google.protobuf.FloatValue progress = 3;
  if (this->has_progress()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->progress_, output);
  }

  // .google.protobuf.StringValue progress_message = 4;
  if (this->has_progress_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->progress_message_, output);
  }

  // .google.protobuf.StringValue progress_metadata = 5;
  if (this->has_progress_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->progress_metadata_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tortuga.UpdateProgressReq)
}

::google::protobuf::uint8* UpdateProgressReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tortuga.UpdateProgressReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tortuga.Worker worker = 1;
  if (this->has_worker()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->worker_, deterministic, target);
  }

  // string handle = 2;
  if (this->handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->handle().data(), static_cast<int>(this->handle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.UpdateProgressReq.handle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->handle(), target);
  }

  // .google.protobuf.FloatValue progress = 3;
  if (this->has_progress()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->progress_, deterministic, target);
  }

  // .google.protobuf.StringValue progress_message = 4;
  if (this->has_progress_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->progress_message_, deterministic, target);
  }

  // .google.protobuf.StringValue progress_metadata = 5;
  if (this->has_progress_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->progress_metadata_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tortuga.UpdateProgressReq)
  return target;
}

size_t UpdateProgressReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tortuga.UpdateProgressReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string handle = 2;
  if (this->handle().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->handle());
  }

  // .tortuga.Worker worker = 1;
  if (this->has_worker()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->worker_);
  }

  // .google.protobuf.FloatValue progress = 3;
  if (this->has_progress()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->progress_);
  }

  // .google.protobuf.StringValue progress_message = 4;
  if (this->has_progress_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->progress_message_);
  }

  // .google.protobuf.StringValue progress_metadata = 5;
  if (this->has_progress_metadata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->progress_metadata_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateProgressReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tortuga.UpdateProgressReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateProgressReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateProgressReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tortuga.UpdateProgressReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tortuga.UpdateProgressReq)
    MergeFrom(*source);
  }
}

void UpdateProgressReq::MergeFrom(const UpdateProgressReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tortuga.UpdateProgressReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.handle().size() > 0) {

    handle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handle_);
  }
  if (from.has_worker()) {
    mutable_worker()->::tortuga::Worker::MergeFrom(from.worker());
  }
  if (from.has_progress()) {
    mutable_progress()->::google::protobuf::FloatValue::MergeFrom(from.progress());
  }
  if (from.has_progress_message()) {
    mutable_progress_message()->::google::protobuf::StringValue::MergeFrom(from.progress_message());
  }
  if (from.has_progress_metadata()) {
    mutable_progress_metadata()->::google::protobuf::StringValue::MergeFrom(from.progress_metadata());
  }
}

void UpdateProgressReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tortuga.UpdateProgressReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateProgressReq::CopyFrom(const UpdateProgressReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tortuga.UpdateProgressReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateProgressReq::IsInitialized() const {
  return true;
}

void UpdateProgressReq::Swap(UpdateProgressReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateProgressReq::InternalSwap(UpdateProgressReq* other) {
  using std::swap;
  handle_.Swap(&other->handle_);
  swap(worker_, other->worker_);
  swap(progress_, other->progress_);
  swap(progress_message_, other->progress_message_);
  swap(progress_metadata_, other->progress_metadata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateProgressReq::GetMetadata() const {
  protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProgressReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProgressReq::kHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProgressReq::ProgressReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsProgressReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tortuga.ProgressReq)
}
ProgressReq::ProgressReq(const ProgressReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.handle().size() > 0) {
    handle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handle_);
  }
  // @@protoc_insertion_point(copy_constructor:tortuga.ProgressReq)
}

void ProgressReq::SharedCtor() {
  handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ProgressReq::~ProgressReq() {
  // @@protoc_insertion_point(destructor:tortuga.ProgressReq)
  SharedDtor();
}

void ProgressReq::SharedDtor() {
  handle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProgressReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProgressReq::descriptor() {
  ::protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProgressReq& ProgressReq::default_instance() {
  ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsProgressReq();
  return *internal_default_instance();
}

ProgressReq* ProgressReq::New(::google::protobuf::Arena* arena) const {
  ProgressReq* n = new ProgressReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProgressReq::Clear() {
// @@protoc_insertion_point(message_clear_start:tortuga.ProgressReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  handle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ProgressReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tortuga.ProgressReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_handle()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->handle().data(), static_cast<int>(this->handle().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.ProgressReq.handle"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tortuga.ProgressReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tortuga.ProgressReq)
  return false;
#undef DO_
}

void ProgressReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tortuga.ProgressReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string handle = 1;
  if (this->handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->handle().data(), static_cast<int>(this->handle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.ProgressReq.handle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->handle(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tortuga.ProgressReq)
}

::google::protobuf::uint8* ProgressReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tortuga.ProgressReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string handle = 1;
  if (this->handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->handle().data(), static_cast<int>(this->handle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.ProgressReq.handle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->handle(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tortuga.ProgressReq)
  return target;
}

size_t ProgressReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tortuga.ProgressReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string handle = 1;
  if (this->handle().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProgressReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tortuga.ProgressReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ProgressReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProgressReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tortuga.ProgressReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tortuga.ProgressReq)
    MergeFrom(*source);
  }
}

void ProgressReq::MergeFrom(const ProgressReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tortuga.ProgressReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.handle().size() > 0) {

    handle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handle_);
  }
}

void ProgressReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tortuga.ProgressReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProgressReq::CopyFrom(const ProgressReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tortuga.ProgressReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProgressReq::IsInitialized() const {
  return true;
}

void ProgressReq::Swap(ProgressReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProgressReq::InternalSwap(ProgressReq* other) {
  using std::swap;
  handle_.Swap(&other->handle_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProgressReq::GetMetadata() const {
  protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProgressResp::InitAsDefaultInstance() {
  ::tortuga::_ProgressResp_default_instance_._instance.get_mutable()->status_ = const_cast< ::google::rpc::Status*>(
      ::google::rpc::Status::internal_default_instance());
}
void ProgressResp::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProgressResp::kHandleFieldNumber;
const int ProgressResp::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProgressResp::ProgressResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsProgressResp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tortuga.ProgressResp)
}
ProgressResp::ProgressResp(const ProgressResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.handle().size() > 0) {
    handle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handle_);
  }
  if (from.has_status()) {
    status_ = new ::google::rpc::Status(*from.status_);
  } else {
    status_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tortuga.ProgressResp)
}

void ProgressResp::SharedCtor() {
  handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = NULL;
  _cached_size_ = 0;
}

ProgressResp::~ProgressResp() {
  // @@protoc_insertion_point(destructor:tortuga.ProgressResp)
  SharedDtor();
}

void ProgressResp::SharedDtor() {
  handle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete status_;
}

void ProgressResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProgressResp::descriptor() {
  ::protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProgressResp& ProgressResp::default_instance() {
  ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsProgressResp();
  return *internal_default_instance();
}

ProgressResp* ProgressResp::New(::google::protobuf::Arena* arena) const {
  ProgressResp* n = new ProgressResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProgressResp::Clear() {
// @@protoc_insertion_point(message_clear_start:tortuga.ProgressResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  handle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  _internal_metadata_.Clear();
}

bool ProgressResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tortuga.ProgressResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_handle()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->handle().data(), static_cast<int>(this->handle().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.ProgressResp.handle"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.rpc.Status status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tortuga.ProgressResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tortuga.ProgressResp)
  return false;
#undef DO_
}

void ProgressResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tortuga.ProgressResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string handle = 1;
  if (this->handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->handle().data(), static_cast<int>(this->handle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.ProgressResp.handle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->handle(), output);
  }

  // .google.rpc.Status status = 2;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->status_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tortuga.ProgressResp)
}

::google::protobuf::uint8* ProgressResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tortuga.ProgressResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string handle = 1;
  if (this->handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->handle().data(), static_cast<int>(this->handle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.ProgressResp.handle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->handle(), target);
  }

  // .google.rpc.Status status = 2;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->status_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tortuga.ProgressResp)
  return target;
}

size_t ProgressResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tortuga.ProgressResp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string handle = 1;
  if (this->handle().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->handle());
  }

  // .google.rpc.Status status = 2;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->status_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProgressResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tortuga.ProgressResp)
  GOOGLE_DCHECK_NE(&from, this);
  const ProgressResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProgressResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tortuga.ProgressResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tortuga.ProgressResp)
    MergeFrom(*source);
  }
}

void ProgressResp::MergeFrom(const ProgressResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tortuga.ProgressResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.handle().size() > 0) {

    handle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handle_);
  }
  if (from.has_status()) {
    mutable_status()->::google::rpc::Status::MergeFrom(from.status());
  }
}

void ProgressResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tortuga.ProgressResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProgressResp::CopyFrom(const ProgressResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tortuga.ProgressResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProgressResp::IsInitialized() const {
  return true;
}

void ProgressResp::Swap(ProgressResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProgressResp::InternalSwap(ProgressResp* other) {
  using std::swap;
  handle_.Swap(&other->handle_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProgressResp::GetMetadata() const {
  protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TaskIdentifier::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskIdentifier::kIdFieldNumber;
const int TaskIdentifier::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskIdentifier::TaskIdentifier()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsTaskIdentifier();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tortuga.TaskIdentifier)
}
TaskIdentifier::TaskIdentifier(const TaskIdentifier& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  // @@protoc_insertion_point(copy_constructor:tortuga.TaskIdentifier)
}

void TaskIdentifier::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TaskIdentifier::~TaskIdentifier() {
  // @@protoc_insertion_point(destructor:tortuga.TaskIdentifier)
  SharedDtor();
}

void TaskIdentifier::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TaskIdentifier::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskIdentifier::descriptor() {
  ::protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TaskIdentifier& TaskIdentifier::default_instance() {
  ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsTaskIdentifier();
  return *internal_default_instance();
}

TaskIdentifier* TaskIdentifier::New(::google::protobuf::Arena* arena) const {
  TaskIdentifier* n = new TaskIdentifier;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TaskIdentifier::Clear() {
// @@protoc_insertion_point(message_clear_start:tortuga.TaskIdentifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool TaskIdentifier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tortuga.TaskIdentifier)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.TaskIdentifier.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.TaskIdentifier.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tortuga.TaskIdentifier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tortuga.TaskIdentifier)
  return false;
#undef DO_
}

void TaskIdentifier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tortuga.TaskIdentifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.TaskIdentifier.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.TaskIdentifier.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tortuga.TaskIdentifier)
}

::google::protobuf::uint8* TaskIdentifier::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tortuga.TaskIdentifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.TaskIdentifier.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.TaskIdentifier.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tortuga.TaskIdentifier)
  return target;
}

size_t TaskIdentifier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tortuga.TaskIdentifier)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string type = 2;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskIdentifier::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tortuga.TaskIdentifier)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskIdentifier* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TaskIdentifier>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tortuga.TaskIdentifier)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tortuga.TaskIdentifier)
    MergeFrom(*source);
  }
}

void TaskIdentifier::MergeFrom(const TaskIdentifier& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tortuga.TaskIdentifier)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
}

void TaskIdentifier::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tortuga.TaskIdentifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskIdentifier::CopyFrom(const TaskIdentifier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tortuga.TaskIdentifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskIdentifier::IsInitialized() const {
  return true;
}

void TaskIdentifier::Swap(TaskIdentifier* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskIdentifier::InternalSwap(TaskIdentifier* other) {
  using std::swap;
  id_.Swap(&other->id_);
  type_.Swap(&other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TaskIdentifier::GetMetadata() const {
  protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FindTaskReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FindTaskReq::kHandleFieldNumber;
const int FindTaskReq::kIsForDoneOnlyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FindTaskReq::FindTaskReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsFindTaskReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tortuga.FindTaskReq)
}
FindTaskReq::FindTaskReq(const FindTaskReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&handle_, &from.handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_for_done_only_) -
    reinterpret_cast<char*>(&handle_)) + sizeof(is_for_done_only_));
  // @@protoc_insertion_point(copy_constructor:tortuga.FindTaskReq)
}

void FindTaskReq::SharedCtor() {
  ::memset(&handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_for_done_only_) -
      reinterpret_cast<char*>(&handle_)) + sizeof(is_for_done_only_));
  _cached_size_ = 0;
}

FindTaskReq::~FindTaskReq() {
  // @@protoc_insertion_point(destructor:tortuga.FindTaskReq)
  SharedDtor();
}

void FindTaskReq::SharedDtor() {
}

void FindTaskReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FindTaskReq::descriptor() {
  ::protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FindTaskReq& FindTaskReq::default_instance() {
  ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsFindTaskReq();
  return *internal_default_instance();
}

FindTaskReq* FindTaskReq::New(::google::protobuf::Arena* arena) const {
  FindTaskReq* n = new FindTaskReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FindTaskReq::Clear() {
// @@protoc_insertion_point(message_clear_start:tortuga.FindTaskReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_for_done_only_) -
      reinterpret_cast<char*>(&handle_)) + sizeof(is_for_done_only_));
  _internal_metadata_.Clear();
}

bool FindTaskReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tortuga.FindTaskReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_for_done_only = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_for_done_only_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tortuga.FindTaskReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tortuga.FindTaskReq)
  return false;
#undef DO_
}

void FindTaskReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tortuga.FindTaskReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 handle = 1;
  if (this->handle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->handle(), output);
  }

  // bool is_for_done_only = 2;
  if (this->is_for_done_only() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_for_done_only(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tortuga.FindTaskReq)
}

::google::protobuf::uint8* FindTaskReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tortuga.FindTaskReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 handle = 1;
  if (this->handle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->handle(), target);
  }

  // bool is_for_done_only = 2;
  if (this->is_for_done_only() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_for_done_only(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tortuga.FindTaskReq)
  return target;
}

size_t FindTaskReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tortuga.FindTaskReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 handle = 1;
  if (this->handle() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->handle());
  }

  // bool is_for_done_only = 2;
  if (this->is_for_done_only() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FindTaskReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tortuga.FindTaskReq)
  GOOGLE_DCHECK_NE(&from, this);
  const FindTaskReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FindTaskReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tortuga.FindTaskReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tortuga.FindTaskReq)
    MergeFrom(*source);
  }
}

void FindTaskReq::MergeFrom(const FindTaskReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tortuga.FindTaskReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.handle() != 0) {
    set_handle(from.handle());
  }
  if (from.is_for_done_only() != 0) {
    set_is_for_done_only(from.is_for_done_only());
  }
}

void FindTaskReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tortuga.FindTaskReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FindTaskReq::CopyFrom(const FindTaskReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tortuga.FindTaskReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindTaskReq::IsInitialized() const {
  return true;
}

void FindTaskReq::Swap(FindTaskReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FindTaskReq::InternalSwap(FindTaskReq* other) {
  using std::swap;
  swap(handle_, other->handle_);
  swap(is_for_done_only_, other->is_for_done_only_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FindTaskReq::GetMetadata() const {
  protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MysqlParams::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MysqlParams::kHostFieldNumber;
const int MysqlParams::kPortFieldNumber;
const int MysqlParams::kUserFieldNumber;
const int MysqlParams::kPasswordFieldNumber;
const int MysqlParams::kDatabaseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MysqlParams::MysqlParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsMysqlParams();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tortuga.MysqlParams)
}
MysqlParams::MysqlParams(const MysqlParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.host().size() > 0) {
    host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user().size() > 0) {
    user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  database_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.database().size() > 0) {
    database_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.database_);
  }
  port_ = from.port_;
  // @@protoc_insertion_point(copy_constructor:tortuga.MysqlParams)
}

void MysqlParams::SharedCtor() {
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  database_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0;
  _cached_size_ = 0;
}

MysqlParams::~MysqlParams() {
  // @@protoc_insertion_point(destructor:tortuga.MysqlParams)
  SharedDtor();
}

void MysqlParams::SharedDtor() {
  host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  database_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MysqlParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MysqlParams::descriptor() {
  ::protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MysqlParams& MysqlParams::default_instance() {
  ::protobuf_tortuga_2ftortuga_2eproto::InitDefaultsMysqlParams();
  return *internal_default_instance();
}

MysqlParams* MysqlParams::New(::google::protobuf::Arena* arena) const {
  MysqlParams* n = new MysqlParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MysqlParams::Clear() {
// @@protoc_insertion_point(message_clear_start:tortuga.MysqlParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  database_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0;
  _internal_metadata_.Clear();
}

bool MysqlParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tortuga.MysqlParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string host = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->host().data(), static_cast<int>(this->host().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.MysqlParams.host"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 port = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user().data(), static_cast<int>(this->user().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.MysqlParams.user"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.MysqlParams.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string database = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_database()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->database().data(), static_cast<int>(this->database().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tortuga.MysqlParams.database"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tortuga.MysqlParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tortuga.MysqlParams)
  return false;
#undef DO_
}

void MysqlParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tortuga.MysqlParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string host = 1;
  if (this->host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host().data(), static_cast<int>(this->host().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.MysqlParams.host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->host(), output);
  }

  // int32 port = 2;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->port(), output);
  }

  // string user = 3;
  if (this->user().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user().data(), static_cast<int>(this->user().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.MysqlParams.user");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->user(), output);
  }

  // string password = 4;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.MysqlParams.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->password(), output);
  }

  // string database = 5;
  if (this->database().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->database().data(), static_cast<int>(this->database().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.MysqlParams.database");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->database(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tortuga.MysqlParams)
}

::google::protobuf::uint8* MysqlParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tortuga.MysqlParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string host = 1;
  if (this->host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host().data(), static_cast<int>(this->host().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.MysqlParams.host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->host(), target);
  }

  // int32 port = 2;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->port(), target);
  }

  // string user = 3;
  if (this->user().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user().data(), static_cast<int>(this->user().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.MysqlParams.user");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->user(), target);
  }

  // string password = 4;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.MysqlParams.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->password(), target);
  }

  // string database = 5;
  if (this->database().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->database().data(), static_cast<int>(this->database().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tortuga.MysqlParams.database");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->database(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tortuga.MysqlParams)
  return target;
}

size_t MysqlParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tortuga.MysqlParams)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string host = 1;
  if (this->host().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host());
  }

  // string user = 3;
  if (this->user().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user());
  }

  // string password = 4;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // string database = 5;
  if (this->database().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->database());
  }

  // int32 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MysqlParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tortuga.MysqlParams)
  GOOGLE_DCHECK_NE(&from, this);
  const MysqlParams* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MysqlParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tortuga.MysqlParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tortuga.MysqlParams)
    MergeFrom(*source);
  }
}

void MysqlParams::MergeFrom(const MysqlParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tortuga.MysqlParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.host().size() > 0) {

    host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  if (from.user().size() > 0) {

    user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.database().size() > 0) {

    database_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.database_);
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
}

void MysqlParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tortuga.MysqlParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MysqlParams::CopyFrom(const MysqlParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tortuga.MysqlParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MysqlParams::IsInitialized() const {
  return true;
}

void MysqlParams::Swap(MysqlParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MysqlParams::InternalSwap(MysqlParams* other) {
  using std::swap;
  host_.Swap(&other->host_);
  user_.Swap(&other->user_);
  password_.Swap(&other->password_);
  database_.Swap(&other->database_);
  swap(port_, other->port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MysqlParams::GetMetadata() const {
  protobuf_tortuga_2ftortuga_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tortuga_2ftortuga_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tortuga

// @@protoc_insertion_point(global_scope)
